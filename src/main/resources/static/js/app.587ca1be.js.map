{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/chatBody.vue?285b","webpack:///./src/chatBody.vue?12ad","webpack:///src/chatBody.vue","webpack:///./src/chatBody.vue?b16e","webpack:///./src/chatBody.vue","webpack:///./src/main.js","webpack:///./src/chatBody.vue?c9b3"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","_vm","this","_h","$createElement","_c","_self","staticClass","directives","rawName","frogueChatViewFlag","expression","_v","attrs","publicPath","frogueChatLoadUrl","adBuootnYn","_e","class","removeBanner","opened","isOpened","currentChatbot","chatbotImg","on","$event","startRecording","_s","chatbotName","_l","chat","index","type","timestamp","domProps","sentence","staticStyle","nodeType","ref","refInFor","carousel","carouselIdx","style","backgroundImage","imgRoute","cardTitle","subCardTitle","option","disabled","isDisabled","isSelected","optionClick","label","undefined","optionList","_m","intent","selected","intentClick","intent_alias","intent_name","setMouseWheel","isBtnExtension","toasting","isToasting","toastingClose","toastingText","openExtension","clickedInput","indexOf","keyCode","sendMessage","target","composing","inputMessage","handleFrogueImageUpload","handleFrogueFileUpload","staticRenderFns","setQuickReplyBtnFlag","chatMsg","parameters","assign","initParams","channel_id","channelId","setChatbotTypingIndicatorFlag","session_id","chatMsgInfo","sessionId","chatbot_id","chatbotId","input_sentence","viewSentence","ins_id","chatInstance","intent_id","chatflow_id","chatflowId","node_id","chatNodeId","param_id","chatParamId","user_id","currentUser","userName","initSelectableResult","carouselList","chatList","resultchatDetail","scrollDown","selectableResult","list","anotherResult","resInput","component","Vue","use","VueAgile","config","productionTip","console","log","el","render","h","chatBody","props","nodeProperties","methods","Array","forEach","$el","attributes","node"],"mappings":"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","file":"js/app.587ca1be.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn-bd\": \"9686\",\n\t\"./bn-bd.js\": \"9686\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-in\": \"ec2e\",\n\t\"./en-in.js\": \"ec2e\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./en-sg\": \"b7e9\",\n\t\"./en-sg.js\": \"b7e9\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-mx\": \"b5b7\",\n\t\"./es-mx.js\": \"b5b7\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fil\": \"d69a\",\n\t\"./fil.js\": \"d69a\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-deva\": \"aaf2\",\n\t\"./gom-deva.js\": \"aaf2\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./oc-lnc\": \"167b\",\n\t\"./oc-lnc.js\": \"167b\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tk\": \"5aff\",\n\t\"./tk.js\": \"5aff\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-mo\": \"3a6c\",\n\t\"./zh-mo.js\": \"3a6c\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./chatBody.vue?vue&type=style&index=1&id=0a78e7ce&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.frogueChatViewFlag),expression:\"!frogueChatViewFlag\"}],staticClass:\"loading-page\"},[_c('h4',[_vm._v(\"Loading...\")]),_c('img',{attrs:{\"src\":_vm.publicPath+_vm.frogueChatLoadUrl,\"alt\":\"단비가 내리면, 개구리가 운다! 단비Ai에서 제공하는 채팅창\",\"width\":\"300\",\"height\":\"300\"}}),(_vm.adBuootnYn == 'true')?_c('div',[_vm._v(\"frogue by 단비Ai\")]):_vm._e()]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.frogueChatViewFlag),expression:\"frogueChatViewFlag\"}],staticClass:\"frogue-pond\",class:{removeBanner: _vm.adBuootnYn != 'true', opened: _vm.isOpened}},[_c('div',{staticClass:\"frogue-screen\"},[_c('div',{staticClass:\"frogue-container\",attrs:{\"id\":\"chatBody\"}},[_c('div',{staticClass:\"frogue-content-wrapper\",class:{opened: _vm.isOpened}},[_c('div',{staticClass:\"frogue-header\"},[_c('div',{staticClass:\"pull-left\"},[_c('div',{staticClass:\"chatbot-profile-wrapper\"},[_c('img',{attrs:{\"width\":\"40\",\"height\":\"40\",\"src\":_vm.publicPath+_vm.currentChatbot.chatbotImg,\"alt\":\"챗봇 이미지\"},on:{\"click\":function($event){return _vm.startRecording()}}})]),_c('span',{staticClass:\"chatbot-name\"},[_vm._v(\" \"+_vm._s(_vm.currentChatbot.chatbotName)+\" \")])])]),_c('div',{staticClass:\"chat-discussion\",attrs:{\"id\":\"chattingPanel\"}},[_vm._l((_vm.chatList),function(chat,index){return _c('div',{key:chat.index},[(chat.type=='question')?_c('div',{staticClass:\"chat-message right\"},[_c('div',{staticClass:\"message\"},[_c('span',{staticClass:\"message-date\"},[_vm._v(_vm._s(chat.timestamp))]),_c('div',[_c('span',{staticClass:\"message-content\",domProps:{\"innerHTML\":_vm._s(chat.sentence)}},[_vm._v(_vm._s(chat.sentence))])])])]):_vm._e(),(chat.type=='imageUpload')?_c('div',{staticClass:\"chat-message right\"},[_c('div',{staticClass:\"message\"},[_c('span',{staticClass:\"message-date\"},[_vm._v(_vm._s(chat.timestamp))]),_c('div',{staticClass:\"img-container\"},[_c('a',{staticClass:\"img-overlay\",attrs:{\"title\":\"이미지 크게보기\",\"href\":chat.sentence,\"target\":\"_blank\"}},[_c('span',[_vm._v(\"+\")])]),_c('img',{staticClass:\"img-square\",attrs:{\"src\":chat.sentence}})])])]):_vm._e(),(chat.type=='fileUpload')?_c('div',{staticClass:\"chat-message right\"},[_c('div',{staticClass:\"message\"},[_c('span',{staticClass:\"message-date\"},[_vm._v(_vm._s(chat.timestamp))]),_c('div',[_c('span',{staticClass:\"message-content\"},[_c('a',{staticClass:\"file-download-btn\",attrs:{\"title\":\"파일 다운로드\",\"href\":chat.sentence,\"target\":\"_blank\"}},[_c('div',{staticClass:\"file-icon-container\"},[_c('svg',{staticClass:\"btn-img\",staticStyle:{\"enable-background\":\"new 0 0 46.3 46.3\"},attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 46.3 46.3\",\"xml:space\":\"preserve\"}},[_c('g',[_c('g',[_c('path',{staticClass:\"svg-file-box\",attrs:{\"d\":\"M24.9,13.6l5.7,6v13h-15v-19H24.9 M25,11.6h-9.7c-0.9,0-1.7,0.8-1.7,1.7v19.6c0,0.9,0.8,1.7,1.7,1.7H31\\n                                                        c0.9,0,1.7-0.8,1.7-1.7V19.5c0-0.4-0.2-0.9-0.5-1.2l-5.9-6.1C25.9,11.8,25.5,11.7,25,11.6z\"}}),_c('path',{staticClass:\"svg-file-line\",attrs:{\"d\":\"M23.9,12.6v7.1c0,0.5,0.4,0.9,0.9,0.9h6.8\"}})])])])]),_vm._v(_vm._s(chat.sentence))])])])])]):(chat.type=='answer')?_c('div',{staticClass:\"chat-message left\"},[(chat.nodeType == 'carousel')?_c('div',[(chat.sentence != '')?_c('div',{staticClass:\"message\"},[_c('span',{staticClass:\"message-date\"},[_vm._v(_vm._s(chat.timestamp))]),_c('div',{staticClass:\"message-content\",domProps:{\"innerHTML\":_vm._s(chat.sentence)}},[_vm._v(_vm._s(chat.sentence))])]):_vm._e(),_c('div',{staticClass:\"message message-carousel-container\"},[_c('div',[_c('agile',{ref:\"carousel\",refInFor:true,attrs:{\"id\":'carousel_' + index}},_vm._l((chat.carouselList),function(carousel,carouselIdx){return _c('div',{key:carousel.index,staticClass:\"slide\"},[_c('div',[_c('div',{staticClass:\"img-container\"},[_c('div',{staticClass:\"img-square-bg\",style:({backgroundImage: 'url('+carousel.imgRoute+')'})})]),_c('span',{staticClass:\"db-carousel-title\"},[_vm._v(_vm._s(carousel.cardTitle || ''))]),(carousel.imgRoute === '' && carousel.cardTitle)?_c('div',{staticStyle:{\"height\":\"30px\"}}):_vm._e(),_c('div',{staticClass:\"db-carousel-desc\"},[_vm._v(_vm._s(carousel.subCardTitle || ''))]),_vm._l((carousel.optionList),function(option){return _c('div',{key:option.id},[_c('button',{staticClass:\"btn-option-list\",class:{'db-link-btn':(option.type != 'btn'), disabled: option.isDisabled, 'selected': option.isSelected, 'maintain' : (option.type == 'call') || (option.type == 'link') },attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.optionClick(option, carouselIdx)}}},[(option.type=='btn')?_c('div',[_c('span',{staticClass:\"db-answer-btn p-r-none\"},[_vm._v(_vm._s(option.label))])]):(option.type=='callFlow')?_c('div',[_c('span',{staticClass:\"db-answer-btn p-r-none\"},[_vm._v(_vm._s(option.label))])]):(option.type=='call')?_c('div',[_c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-phone\",attrs:{\"title\":\"전화걸기\"}})]),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='outApp')?_c('div',{attrs:{\"title\":\"외부앱 링크\"}},[_c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-external-link\",attrs:{\"title\":\"외부앱 링크\"}})]),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='inApp')?_c('div',{attrs:{\"title\":\"내부앱 링크\"}},[_c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-external-link-square\",attrs:{\"title\":\"내부앱 링크\"}})]),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='link')?_c('div',{attrs:{\"title\":\"웹링크\"}},[_c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-link\",attrs:{\"title\":\"웹링크\"}})]),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='action')?_c('div',{attrs:{\"title\":\"액션\"}},[_c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-bolt\",attrs:{\"title\":\"액션\"}})]),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):_vm._e()])])})],2)])}),0)],1)])]):_vm._e(),(chat.nodeType == undefined || chat.nodeType != 'carousel')?_c('div',[_c('div',{staticClass:\"message\"},[_c('span',{staticClass:\"message-date\"},[_vm._v(_vm._s(chat.timestamp))]),(chat.nodeType == 'one_carousel')?_c('div',{staticClass:\"one-carousel\"},[_c('div',{staticClass:\"img-container\"},[_c('div',{staticClass:\"img-square-bg\",style:({backgroundImage: 'url('+chat.imgRoute+')'})})]),_c('span',{staticClass:\"db-carousel-title\"},[_vm._v(_vm._s(chat.cardTitle || ''))]),(chat.imgRoute == '' && chat.cardTitle)?_c('div',{staticStyle:{\"height\":\"30px\"}}):_vm._e(),_c('div',{staticClass:\"db-carousel-desc\"},[_vm._v(_vm._s(chat.subCardTitle || ''))])]):_vm._e(),(chat.nodeType != 'one_carousel')?_c('div',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(chat.imgRoute != undefined && chat.imgRoute != ''),expression:\"chat.imgRoute != undefined && chat.imgRoute != ''\"}],staticClass:\"img-container\"},[_c('a',{staticClass:\"img-overlay\",attrs:{\"title\":\"이미지 크게보기\",\"href\":chat.imgRoute,\"target\":\"_blank\"}},[_c('span',[_vm._v(\"+\")])]),_c('img',{staticClass:\"img-square\",attrs:{\"src\":chat.imgRoute}})])]):_vm._e(),_c('div',{staticClass:\"message-content\",domProps:{\"innerHTML\":_vm._s(chat.sentence)}},[_vm._v(_vm._s(chat.sentence))])]),(chat.optionList.length > 0)?_c('div',{staticClass:\"button-container\"},_vm._l((chat.optionList),function(option){return _c('div',{key:option.id},[(option.type!='quick')?_c('div',[_c('button',{staticClass:\"btn-option-list\",class:{'db-link-btn':(option.type != 'btn'), 'disabled': option.isDisabled, 'selected': option.isSelected, 'maintain' : (option.type == 'call') || (option.type == 'link') },attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.optionClick(option)}}},[(option.type=='btn')?_c('div',[_c('span',[_vm._v(_vm._s(option.label))])]):(option.type=='callFlow')?_c('div',[_c('span',[_vm._v(_vm._s(option.label))])]):(option.type=='call')?_c('div',[_vm._m(0,true),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='outApp')?_c('div',[_vm._m(1,true),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='inApp')?_c('div',[_vm._m(2,true),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='link')?_c('div',[_vm._m(3,true),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):(option.type=='action')?_c('div',[_vm._m(4,true),_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])]):_vm._e()])]):_vm._e()])}),0):_vm._e()]):_vm._e()]):(chat.type=='askBack')?_c('div',[_c('div',{staticClass:\"chat-message left\"},[_c('div',{staticClass:\"message\"},[_c('span',{staticClass:\"message-date\"},[_vm._v(_vm._s(chat.timestamp))]),_c('span',{staticClass:\"message-content\",domProps:{\"innerHTML\":_vm._s(chat.sentence)}},[_vm._v(_vm._s(chat.sentence))])])]),_c('div',{staticClass:\"button-container\"},_vm._l((chat.intentList),function(intent){return _c('div',{key:intent.id},[_c('button',{staticClass:\"ui-sortable btn-option-list db-intent-answer\",class:{ disabled: intent.isDisabled, selected: intent.isSelected},attrs:{\"type\":\"button\",\"disabled\":intent.isDisabled || intent.isSelected},on:{\"click\":function($event){return _vm.intentClick(intent)}}},[_c('span',[_vm._v(_vm._s(intent.intent_alias || intent.intent_name))])])])}),0)]):_vm._e()])}),(_vm.chatbotTypingIndicatorFlag)?_c('div',{staticClass:\"chatbot-typing-indicator\",attrs:{\"title\":\"입력중...\"}},[_c('span'),_c('span'),_c('span')]):_vm._e(),(_vm.userTypingIndicatorFlag)?_c('div',{staticClass:\"user-typing-indicator\",attrs:{\"title\":\"입력중...\"}},[_c('span'),_c('span'),_c('span')]):_vm._e(),(_vm.quickReplyBtnFlag)?_c('div',{staticClass:\"quick-button-space\",class:{opened: _vm.isOpened}}):_vm._e()],2)]),(_vm.quickReplyBtnFlag)?_c('div',{staticClass:\"quick-button-container\",class:{opened: _vm.isOpened}},[_c('div',{ref:\"quickList\",staticClass:\"scrollable\",attrs:{\"id\":'quickList_' + _vm.index,\"title\":\"마우스 휠로 스크롤 됩니다.\"},on:{\"wheel\":function($event){return _vm.setMouseWheel(_vm.index, $event)}}},[_vm._l((_vm.quickList),function(option){return _c('span',{key:option.id},[_c('button',{staticClass:\"btn-quick-list\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.optionClick(option)}}},[_c('div',{staticClass:\"btn-option-text\"},[_c('span',{staticClass:\"db-answer-btn\"},[_vm._v(_vm._s(option.label))])])])])}),_c('span',{staticClass:\"gradient\"})],2)]):_vm._e(),_c('div',{staticClass:\"frogue-bottom-container animated\",class:{opened: _vm.isOpened}},[_c('div',{staticClass:\"frogue-input-wrapper\",class:{'none-btn-extension': _vm.isBtnExtension != 'true'}},[_c('div',{staticClass:\"toast-message\",class:{toasting: _vm.isToasting},on:{\"click\":function($event){return _vm.toastingClose()}}},[_c('span',{domProps:{\"textContent\":_vm._s(_vm.toastingText)}})]),(_vm.isBtnExtension == 'true')?_c('button',{staticClass:\"animated btn-extension\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.openExtension()}}},[_c('svg',{staticClass:\"btn-img\",attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"viewBox\":\"0 0 46.34 46.34\",\"xml:space\":\"preserve\"}},[_c('defs',[_c('svg:style',{attrs:{\"type\":\"text/css\"}})],1),_c('title',[_vm._v(\"확장기능\")]),_c('g',{attrs:{\"id\":\"Layer_2\",\"data-name\":\"Layer 2\"}},[_c('g',{attrs:{\"id\":\"Layer_2-2\",\"data-name\":\"Layer 2\"}},[_c('path',{staticClass:\"svg-extension-circle\",attrs:{\"d\":\"M23.17,2A21.17,21.17,0,1,1,2,23.17,21.19,21.19,0,0,1,23.17,2m0-2A23.17,23.17,0,1,0,46.34,23.17,23.17,23.17,0,0,0,23.17,0Z\"}}),_c('line',{staticClass:\"svg-extension-line\",attrs:{\"x1\":\"13.04\",\"y1\":\"23.17\",\"x2\":\"33.31\",\"y2\":\"23.17\"}}),_c('line',{staticClass:\"svg-extension-line\",attrs:{\"x1\":\"23.17\",\"y1\":\"13.04\",\"x2\":\"23.17\",\"y2\":\"33.31\"}})])])])]):_vm._e(),_c('div',{staticClass:\"input-text-border\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputMessage),expression:\"inputMessage\"}],ref:\"inputbox\",staticClass:\"input-text\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.inputMessage)},on:{\"click\":function($event){return _vm.clickedInput()},\"keyup\":function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==13){ return null; }return _vm.sendMessage('','')},\"input\":function($event){if($event.target.composing){ return; }_vm.inputMessage=$event.target.value}}})]),_c('button',{ref:\"sendBtn\",staticClass:\"animated btn-send\",attrs:{\"type\":\"button\",\"id\":\"sendBtn\"},on:{\"click\":function($event){return _vm.sendMessage('','')}}},[_c('svg',{staticClass:\"btn-img\",attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"viewBox\":\"0 0 26.05 26.05\",\"xml:space\":\"preserve\"}},[_c('defs',[_c('svg:style',{attrs:{\"type\":\"text/css\"}})],1),_c('title',[_vm._v(\" 보내기 \")]),_c('g',{attrs:{\"data-name\":\"Layer 2\"}},[_c('g',{attrs:{\"data-name\":\"Layer 2\"}},[_c('polygon',{staticClass:\"svg-send-wing\",attrs:{\"points\":\"0 8.53 9 17.53 22.5 13.03 0 8.53\"}}),_c('path',{staticClass:\"svg-send-body\",attrs:{\"d\":\"M0,.77V7.9a.77.77,0,0,0,.62.75l18.11,3.62a.77.77,0,0,1,0,1.51L.62,17.4a.77.77,0,0,0-.62.76v7.12A.77.77,0,0,0,1.11,26L25.63,13.71a.77.77,0,0,0,0-1.37L1.11.08A.77.77,0,0,0,0,.77Z\"}})])])])])]),(_vm.isBtnExtension == 'true')?_c('div',{staticClass:\"frogue-panel-extention\"},[_c('div',[_c('div',{staticClass:\"img-box\",attrs:{\"onclick\":\"document.getElementById('frogueUploadImage').click();\"}},[_c('div',[_c('svg',{staticClass:\"btn-img\",staticStyle:{\"enable-background\":\"new 0 0 46.3 46.3\"},attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 46.3 46.3\",\"xml:space\":\"preserve\"}},[_c('title',[_vm._v(\"이미지 전송\")]),_c('path',{staticClass:\"svg-camera\",attrs:{\"d\":\"M23.2,2c11.7,0,21.2,9.5,21.2,21.2s-9.5,21.2-21.2,21.2S2,34.9,2,23.2l0,0C2,11.5,11.5,2,23.2,2 M23.2,0\\n                                        C10.4,0,0,10.4,0,23.2s10.4,23.2,23.2,23.2S46.3,36,46.3,23.2S36,0,23.2,0L23.2,0z\"}}),_c('g',[_c('g',[_c('g',[_c('path',{staticClass:\"svg-camera\",attrs:{\"d\":\"M26.1,12.4c0.5,0,0.9,0.4,0.9,0.9v0.2c0,1.3,1.1,2.4,2.4,2.4h0.1c2.5,0,4.6,2.1,4.6,4.6v6.7\\n                                                        c0,2.5-2.1,4.6-4.6,4.6H16.8c-2.5,0-4.6-2.1-4.6-4.6v-6.7c0-2.5,2.1-4.6,4.6-4.6h0.1c1.3,0,2.4-1.1,2.4-2.4v-0.2\\n                                                        c0-0.5,0.4-0.9,0.9-0.9L26.1,12.4 M26.1,10.4h-5.9c-1.6,0-2.9,1.3-2.9,2.9v0.2c0,0.2-0.2,0.4-0.4,0.4h-0.1c-3.6,0-6.6,3-6.6,6.6\\n                                                        v6.7c0,3.6,3,6.6,6.6,6.6h12.8c3.6,0,6.6-3,6.6-6.6v-6.7c0-3.6-3-6.6-6.6-6.6h-0.1c-0.2,0-0.4-0.2-0.4-0.4v-0.2\\n                                                        C29,11.7,27.7,10.4,26.1,10.4L26.1,10.4z\"}})])]),_c('g',[_c('path',{staticClass:\"svg-camera\",attrs:{\"d\":\"M23.2,19.6c2,0,3.5,1.6,3.5,3.5s-1.6,3.5-3.5,3.5s-3.5-1.6-3.5-3.5S21.2,19.6,23.2,19.6 M23.2,17.6\\n                                                    c-3.1,0-5.5,2.5-5.5,5.5s2.5,5.5,5.5,5.5s5.5-2.5,5.5-5.5S26.2,17.6,23.2,17.6L23.2,17.6z\"}})])])]),_c('div',[_vm._v(\"이미지\")])])]),_c('div',{staticClass:\"img-box\",attrs:{\"onclick\":\"document.getElementById('frogueUploadFile').click();\"}},[_c('div',[_c('svg',{staticClass:\"btn-img\",staticStyle:{\"enable-background\":\"new 0 0 46.3 46.3\"},attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 46.3 46.3\",\"xml:space\":\"preserve\"}},[_c('path',{staticClass:\"svg-file-circle\",attrs:{\"d\":\"M23.2,2c11.7,0,21.2,9.5,21.2,21.2s-9.5,21.2-21.2,21.2S2,34.9,2,23.2l0,0C2,11.5,11.5,2,23.2,2 M23.2,0\\n                                            C10.4,0,0,10.4,0,23.2s10.4,23.2,23.2,23.2S46.3,36,46.3,23.2S36,0,23.2,0L23.2,0z\"}}),_c('g',[_c('g',[_c('path',{staticClass:\"svg-file-box\",attrs:{\"d\":\"M24.9,13.6l5.7,6v13h-15v-19H24.9 M25,11.6h-9.7c-0.9,0-1.7,0.8-1.7,1.7v19.6c0,0.9,0.8,1.7,1.7,1.7H31\\n                                                    c0.9,0,1.7-0.8,1.7-1.7V19.5c0-0.4-0.2-0.9-0.5-1.2l-5.9-6.1C25.9,11.8,25.5,11.7,25,11.6z\"}}),_c('path',{staticClass:\"svg-file-line\",attrs:{\"d\":\"M23.9,12.6v7.1c0,0.5,0.4,0.9,0.9,0.9h6.8\"}})])])]),_c('div',[_vm._v(\"파일\")])])])]),_c('input',{ref:\"frogueUploadImage\",staticStyle:{\"position\":\"absolute\",\"width\":\"1px\",\"height\":\"1px\",\"padding\":\"0\",\"margin\":\"-1px\",\"overflow\":\"hidden\",\"clip\":\"rect(0,0,0,0)\",\"border\":\"0\"},attrs:{\"type\":\"file\",\"id\":\"frogueUploadImage\",\"accept\":\"image/*\"},on:{\"change\":function($event){return _vm.handleFrogueImageUpload()}}}),_c('input',{ref:\"frogueUploadFile\",staticStyle:{\"position\":\"absolute\",\"width\":\"1px\",\"height\":\"1px\",\"padding\":\"0\",\"margin\":\"-1px\",\"overflow\":\"hidden\",\"clip\":\"rect(0,0,0,0)\",\"border\":\"0\"},attrs:{\"type\":\"file\",\"id\":\"frogueUploadFile\"},on:{\"change\":function($event){return _vm.handleFrogueFileUpload()}}})]):_vm._e()]),(_vm.adBuootnYn == 'true')?_c('div',{staticClass:\"frogue-footer\"},[_vm._m(5)]):_vm._e()])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-phone\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-external-link\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-external-link-square\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-link\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btn-icon-type\"},[_c('i',{staticClass:\"fa fa-bolt\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{staticClass:\"btn-banner\",attrs:{\"title\":\"챗봇을 만드는 가장 쉬운 방법, 단비Ai 바로가기\",\"href\":\"https://danbee.ai\",\"target\":\"_blank\"}},[_c('strong',[_vm._v(\"단비Ai\")]),_vm._v(\"로 만든 챗봇 :)\")])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"container\">\r\n        <div class=\"loading-page\" v-show=\"!frogueChatViewFlag\">\r\n            <h4>Loading...</h4>\r\n            <img :src=\"publicPath+frogueChatLoadUrl\" alt=\"단비가 내리면, 개구리가 운다! 단비Ai에서 제공하는 채팅창\" width=\"300\" height=\"300\">\r\n            <div v-if=\"adBuootnYn == 'true'\">frogue by 단비Ai</div>\r\n        </div>\r\n        <div class=\"frogue-pond\" v-show=\"frogueChatViewFlag\" v-bind:class=\"{removeBanner: adBuootnYn != 'true', opened: isOpened}\" >\r\n            <div class=\"frogue-screen\">\r\n                <div id=\"chatBody\" class=\"frogue-container\">\r\n                    <!-- chat start -->\r\n                    <div class=\"frogue-content-wrapper\" v-bind:class=\"{opened: isOpened}\">\r\n                        <!-- chat head start -->\r\n                        <div class=\"frogue-header\">\r\n                            <div class=\"pull-left\">\r\n                                <div class=\"chatbot-profile-wrapper\">\r\n                                    <img width=\"40\" height=\"40\" :src=\"publicPath+currentChatbot.chatbotImg\" alt=\"챗봇 이미지\" @click=\"startRecording()\">\r\n                                </div>\r\n                                <span class=\"chatbot-name\"> {{ currentChatbot.chatbotName }} </span>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <!-- chat head end -->\r\n                        <!-- chat body start (scroll) -->\r\n                        <div id=\"chattingPanel\" class=\"chat-discussion\">\r\n                            <!-- chatList loop start -->\r\n                            <div v-for=\"(chat, index) in chatList\" :key=\"chat.index\">\r\n                                <!-- 사용자 말풍선 -->\r\n                                <div v-if=\"chat.type=='question'\" class=\"chat-message right\">\r\n                                    <div class=\"message\">\r\n                                        <span class=\"message-date\">{{chat.timestamp}}</span>\r\n                                        <div>\r\n                                            <span class=\"message-content\" v-html=\"chat.sentence\">{{chat.sentence}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-if=\"chat.type=='imageUpload'\" class=\"chat-message right\">\r\n                                    <div class=\"message\">\r\n                                        <span class=\"message-date\">{{chat.timestamp}}</span>\r\n                                        <div class=\"img-container\">\r\n                                            <a class=\"img-overlay\" title=\"이미지 크게보기\" v-bind:href=\"chat.sentence\" target=\"_blank\"><span>+</span></a>\r\n                                            <img v-bind:src=\"chat.sentence\" class=\"img-square\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-if=\"chat.type=='fileUpload'\" class=\"chat-message right\">\r\n                                    <div class=\"message\">\r\n                                        <span class=\"message-date\">{{chat.timestamp}}</span>\r\n                                        <div>\r\n                                    <span class=\"message-content\">\r\n                                        <a title=\"파일 다운로드\" v-bind:href=\"chat.sentence\" target=\"_blank\" class=\"file-download-btn\">\r\n                                        <div class=\"file-icon-container\">\r\n                                            <svg class=\"btn-img\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 46.3 46.3\" style=\"enable-background:new 0 0 46.3 46.3;\" xml:space=\"preserve\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path class=\"svg-file-box\" d=\"M24.9,13.6l5.7,6v13h-15v-19H24.9 M25,11.6h-9.7c-0.9,0-1.7,0.8-1.7,1.7v19.6c0,0.9,0.8,1.7,1.7,1.7H31\r\n                                                            c0.9,0,1.7-0.8,1.7-1.7V19.5c0-0.4-0.2-0.9-0.5-1.2l-5.9-6.1C25.9,11.8,25.5,11.7,25,11.6z\"></path>\r\n                                                        <path class=\"svg-file-line\" d=\"M23.9,12.6v7.1c0,0.5,0.4,0.9,0.9,0.9h6.8\"></path>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            </div>{{chat.sentence}}<!--파일명만 추출 String fileName = url.substring( url.lastIndexOf('/')+1, url.length() ); -->\r\n                                        </a>\r\n                                    </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- 챗봇 말풍선 :: 정상 응답 -->\r\n                                <div v-else-if=\"chat.type=='answer'\" class=\"chat-message left\">\r\n                                    <!-- 챗봇 답변 형태에 따라 모양 달라짐 : carousel, one_carousel 이나 이미지가 있는 답변, askBack -->\r\n                                    <!-- 1 :: 캐로셀일때 -->\r\n                                    <div v-if=\"chat.nodeType == 'carousel'\">\r\n                                        <div class=\"message\" v-if=\"chat.sentence != ''\">\r\n                                            <span class=\"message-date\">{{chat.timestamp}}</span>\r\n                                            <div class=\"message-content\" v-html=\"chat.sentence\">{{chat.sentence}}</div>\r\n                                        </div>\r\n                                        <div class=\"message message-carousel-container\">\r\n                                            <!-- <span class=\"message-date\">{{chat.timestamp}}</span> -->\r\n                                            <div >\r\n                                                <agile ref=\"carousel\" :id=\"'carousel_' + index\">\r\n                                                    <div v-for=\"(carousel, carouselIdx) in chat.carouselList\" :key=\"carousel.index\" class=\"slide\">\r\n                                                        <div>\r\n                                                            <div class=\"img-container\">\r\n                                                                <!-- <img v-bind:src=\"carousel.imgRoute\" class=\"img-square\"/> -->\r\n                                                                <div class=\"img-square-bg\" v-bind:style=\"{backgroundImage: 'url('+carousel.imgRoute+')'}\"> </div>\r\n                                                            </div>\r\n                                                            <span class=\"db-carousel-title\">{{carousel.cardTitle || ''}}</span>\r\n                                                            <div v-if=\"carousel.imgRoute === '' && carousel.cardTitle\" style=\"height:30px\" ></div>\r\n                                                            <div class=\"db-carousel-desc\">{{carousel.subCardTitle || ''}}</div>\r\n                                                            <div v-for=\"option in carousel.optionList\" :key=\"option.id\">\r\n                                                                <button type=\"button\" @click=\"optionClick(option, carouselIdx)\" class=\"btn-option-list\" :class=\"{'db-link-btn':(option.type != 'btn'), disabled: option.isDisabled, 'selected': option.isSelected, 'maintain' : (option.type == 'call') || (option.type == 'link') }\">\r\n                                                                    <div v-if=\"option.type=='btn'\">\r\n                                                                        <span class=\"db-answer-btn p-r-none\">{{option.label}}</span>\r\n                                                                    </div>\r\n                                                                    <div v-else-if=\"option.type=='callFlow'\">\r\n                                                                        <span class=\"db-answer-btn p-r-none\">{{option.label}}</span>\r\n                                                                    </div>\r\n                                                                    <div v-else-if=\"option.type=='call'\" >\r\n                                                                        <div class=\"btn-icon-type\"> <i class=\"fa fa-phone\" title=\"전화걸기\"></i> </div>\r\n                                                                        <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                                    </div>\r\n                                                                    <div v-else-if=\"option.type=='outApp'\" title=\"외부앱 링크\">\r\n                                                                        <div class=\"btn-icon-type\"> <i class=\"fa fa-external-link\" title=\"외부앱 링크\"></i> </div>\r\n                                                                        <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                                    </div>\r\n                                                                    <div v-else-if=\"option.type=='inApp'\" title=\"내부앱 링크\">\r\n                                                                        <div class=\"btn-icon-type\"> <i class=\"fa fa-external-link-square\" title=\"내부앱 링크\"></i> </div>\r\n                                                                        <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                                    </div>\r\n                                                                    <div v-else-if=\"option.type=='link'\" title=\"웹링크\">\r\n                                                                        <div class=\"btn-icon-type\"> <i class=\"fa fa-link\" title=\"웹링크\"></i> </div>\r\n                                                                        <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                                    </div>\r\n                                                                    <div v-else-if=\"option.type=='action'\" title=\"액션\">\r\n                                                                        <div class=\"btn-icon-type\"> <i class=\"fa fa-bolt\" title=\"액션\"></i> </div>\r\n                                                                        <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                                    </div>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </agile>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- 2 :: 캐로셀이 아니고 노드타입이 설정되지 않았을 때  -->\r\n                                    <div v-if=\"chat.nodeType == undefined || chat.nodeType != 'carousel'\">\r\n                                        <div class=\"message\">\r\n                                            <span class=\"message-date\">{{chat.timestamp}}</span>\r\n                                            <!-- 2-1 :: 캐로셀에 카드 한장일 때 -->\r\n                                            <div v-if=\"chat.nodeType == 'one_carousel'\" class=\"one-carousel\">\r\n                                                <div class=\"img-container\">\r\n                                                    <div class=\"img-square-bg\" v-bind:style=\"{backgroundImage: 'url('+chat.imgRoute+')'}\"></div>\r\n                                                </div>\r\n                                                <span class=\"db-carousel-title\">{{chat.cardTitle || ''}}</span>\r\n                                                <div v-if=\"chat.imgRoute == '' && chat.cardTitle\" style=\"height:30px\"></div>\r\n                                                <div class=\"db-carousel-desc\">{{chat.subCardTitle || ''}}</div>\r\n                                            </div>\r\n                                            <!-- 2-2 :: 이미지 있는 메시지 -->\r\n                                            <div v-if=\"chat.nodeType != 'one_carousel'\">\r\n                                                <div v-show=\"chat.imgRoute != undefined && chat.imgRoute != ''\" class=\"img-container\">\r\n                                                    <a class=\"img-overlay\" title=\"이미지 크게보기\" v-bind:href=\"chat.imgRoute\" target=\"_blank\"> <span>+</span> </a>\r\n                                                    <img v-bind:src=\"chat.imgRoute\" class=\"img-square\" />\r\n                                                    <!-- <div class=\"img-square\" v-bind:style=\"{backgroundImage: 'url('+chat.imgRoute+')'}\"> </div> -->\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"message-content\" v-html=\"chat.sentence\">{{chat.sentence}}</div>\r\n                                        </div>\r\n                                        <div v-if=\"chat.optionList.length > 0\" class=\"button-container\">\r\n                                            <div v-for=\"option in chat.optionList\" :key=\"option.id\">\r\n                                                <div v-if=\"option.type!='quick'\">\r\n                                                    <button type=\"button\" @click=\"optionClick(option)\" class=\"btn-option-list\" :class=\"{'db-link-btn':(option.type != 'btn'), 'disabled': option.isDisabled, 'selected': option.isSelected, 'maintain' : (option.type == 'call') || (option.type == 'link') }\">\r\n                                                        <div v-if=\"option.type=='btn'\"> <span>{{option.label}}</span> </div>\r\n                                                        <div v-else-if=\"option.type=='callFlow'\"> <span>{{option.label}}</span> </div>\r\n                                                        <div v-else-if=\"option.type=='call'\">\r\n                                                            <div class=\"btn-icon-type\"> <i class=\"fa fa-phone\"></i> </div>\r\n                                                            <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                        </div>\r\n                                                        <div v-else-if=\"option.type=='outApp'\">\r\n                                                            <div class=\"btn-icon-type\"> <i class=\"fa fa-external-link\"></i> </div>\r\n                                                            <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                        </div>\r\n                                                        <div v-else-if=\"option.type=='inApp'\">\r\n                                                            <div class=\"btn-icon-type\"> <i class=\"fa fa-external-link-square\"></i> </div>\r\n                                                            <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                        </div>\r\n                                                        <div v-else-if=\"option.type=='link'\">\r\n                                                            <div class=\"btn-icon-type\"> <i class=\"fa fa-link\"></i> </div>\r\n                                                            <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                        </div>\r\n                                                        <div v-else-if=\"option.type=='action'\">\r\n                                                            <div class=\"btn-icon-type\"> <i class=\"fa fa-bolt\"></i> </div>\r\n                                                            <div class=\"btn-option-text\"> <span class=\"db-answer-btn\">{{option.label}}</span> </div>\r\n                                                        </div>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- 챗봇 말풍선 :: 정상 응답 -->\r\n                                <!-- 챗봇 말풍선 :: 예외처리 Reconfirm/Multi-Intent -->\r\n                                <div v-else-if=\"chat.type=='askBack'\">\r\n                                    <div class=\"chat-message left\">\r\n                                        <div class=\"message\">\r\n                                            <span class=\"message-date\">{{chat.timestamp}}</span>\r\n                                            <span class=\"message-content\" v-html=\"chat.sentence\">{{chat.sentence}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"button-container\">\r\n                                        <div v-for=\"intent in chat.intentList\" :key=\"intent.id\">\r\n                                            <button type=\"button\" class=\"ui-sortable btn-option-list db-intent-answer\" :class=\"{ disabled: intent.isDisabled, selected: intent.isSelected}\" :disabled=\"intent.isDisabled || intent.isSelected\" @click=\"intentClick(intent)\" >\r\n                                                <span>{{intent.intent_alias || intent.intent_name}}</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- chatList loop end -->\r\n                            <!-- sometimes show / hide area start -->\r\n                            <div class=\"chatbot-typing-indicator\" title=\"입력중...\" v-if=\"chatbotTypingIndicatorFlag\">\r\n                                <span></span><span></span><span></span>\r\n                            </div>\r\n                            <div class=\"user-typing-indicator\" title=\"입력중...\" v-if=\"userTypingIndicatorFlag\">\r\n                                <span></span><span></span><span></span>\r\n                            </div>\r\n                            <div v-if=\"quickReplyBtnFlag\" class=\"quick-button-space\" v-bind:class=\"{opened: isOpened}\"></div>\r\n                            <!-- sometimes show / hide area end -->\r\n                        </div>\r\n                        <!-- chat body end (scroll) -->\r\n                    </div>\r\n                    <!-- chat end -->\r\n\r\n                    <!-- quick reply start -->\r\n\r\n                    <div v-if=\"quickReplyBtnFlag\" class=\"quick-button-container\" v-bind:class=\"{opened: isOpened}\" >\r\n                        <div class=\"scrollable\" @wheel=\"setMouseWheel(index, $event)\" ref=\"quickList\" :id=\"'quickList_' + index\" title=\"마우스 휠로 스크롤 됩니다.\">\r\n                    <span v-for=\"option in quickList\" :key=\"option.id\">\r\n                        <button type=\"button\" @click=\"optionClick(option)\" class=\"btn-quick-list\">\r\n                            <div class=\"btn-option-text\">\r\n                                <span class=\"db-answer-btn\">{{option.label}}</span>\r\n                            </div>\r\n                        </button>\r\n                    </span>\r\n                            <span class=\"gradient\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- quick reply end -->\r\n\r\n                    <!-- user input area start -->\r\n                    <div class=\"frogue-bottom-container animated\" v-bind:class=\"{opened: isOpened}\">\r\n                        <!-- 열리면 클래스에 opened를 넣으면 됩니다. -->\r\n                        <div class=\"frogue-input-wrapper\" v-bind:class=\"{'none-btn-extension': isBtnExtension != 'true'}\">\r\n                            <div class=\"toast-message\" @click=\"toastingClose()\" v-bind:class=\"{toasting: isToasting}\">\r\n                                <span v-text=\"toastingText\"></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"animated btn-extension\" @click=\"openExtension()\" v-if=\"isBtnExtension == 'true'\">\r\n                                <!-- <img src=\"~/assets/img/chatBtn/btn-extension.svg\" class=\"btn-img\" /> -->\r\n                                <!-- extension 버튼 [+] 모양 -->\r\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 46.34 46.34\" xml:space=\"preserve\" class=\"btn-img\">\r\n                                    <defs>\r\n                                        <svg:style type=\"text/css\">\r\n                                        </svg:style>\r\n                                    </defs>\r\n                                    <title>확장기능</title>\r\n                                    <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n                                        <g id=\"Layer_2-2\" data-name=\"Layer 2\">\r\n                                            <path class=\"svg-extension-circle\"\r\n                                                  d=\"M23.17,2A21.17,21.17,0,1,1,2,23.17,21.19,21.19,0,0,1,23.17,2m0-2A23.17,23.17,0,1,0,46.34,23.17,23.17,23.17,0,0,0,23.17,0Z\">\r\n                                            </path>\r\n                                            <line class=\"svg-extension-line\" x1=\"13.04\" y1=\"23.17\" x2=\"33.31\" y2=\"23.17\"></line>\r\n                                            <line class=\"svg-extension-line\" x1=\"23.17\" y1=\"13.04\" x2=\"23.17\" y2=\"33.31\"></line>\r\n                                        </g>\r\n                                    </g>\r\n                                </svg>\r\n                            </button>\r\n                            <div class=\"input-text-border\">\r\n                                <input @click=\"clickedInput()\" type=\"text\" class=\"input-text\" ref=\"inputbox\" v-model=\"inputMessage\" @keyup.13=\"sendMessage('','')\" />\r\n                            </div>\r\n                            <button type=\"button\" id=\"sendBtn\" ref=\"sendBtn\" class=\"animated btn-send\" @click=\"sendMessage('','')\" >\r\n                                <!-- <img src=\"~/assets/img/chatBtn/btn-send.svg\" class=\"btn-img\"> -->\r\n                                <!-- 보내기 버튼 -->\r\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 26.05 26.05\" xml:space=\"preserve\" class=\"btn-img\">\r\n                                    <defs>\r\n                                        <svg:style type=\"text/css\">\r\n                                        </svg:style>\r\n                                    </defs>\r\n                                    <title> 보내기 </title>\r\n                                    <g data-name=\"Layer 2\">\r\n                                        <g data-name=\"Layer 2\">\r\n                                            <polygon points=\"0 8.53 9 17.53 22.5 13.03 0 8.53\" class=\"svg-send-wing\"></polygon>\r\n                                            <path d=\"M0,.77V7.9a.77.77,0,0,0,.62.75l18.11,3.62a.77.77,0,0,1,0,1.51L.62,17.4a.77.77,0,0,0-.62.76v7.12A.77.77,0,0,0,1.11,26L25.63,13.71a.77.77,0,0,0,0-1.37L1.11.08A.77.77,0,0,0,0,.77Z\" class=\"svg-send-body\"></path>\r\n                                        </g>\r\n                                    </g>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"frogue-panel-extention\" v-if=\"isBtnExtension == 'true'\">\r\n                            <div>\r\n                                <div class=\"img-box\" onclick=\"document.getElementById('frogueUploadImage').click();\">\r\n                                    <div>\r\n                                        <svg class=\"btn-img\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 46.3 46.3\" style=\"enable-background:new 0 0 46.3 46.3;\" xml:space=\"preserve\">\r\n                                            <title>이미지 전송</title>\r\n                                            <path class=\"svg-camera\" d=\"M23.2,2c11.7,0,21.2,9.5,21.2,21.2s-9.5,21.2-21.2,21.2S2,34.9,2,23.2l0,0C2,11.5,11.5,2,23.2,2 M23.2,0\r\n                                            C10.4,0,0,10.4,0,23.2s10.4,23.2,23.2,23.2S46.3,36,46.3,23.2S36,0,23.2,0L23.2,0z\" ></path>\r\n                                            <g>\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path class=\"svg-camera\" d=\"M26.1,12.4c0.5,0,0.9,0.4,0.9,0.9v0.2c0,1.3,1.1,2.4,2.4,2.4h0.1c2.5,0,4.6,2.1,4.6,4.6v6.7\r\n                                                            c0,2.5-2.1,4.6-4.6,4.6H16.8c-2.5,0-4.6-2.1-4.6-4.6v-6.7c0-2.5,2.1-4.6,4.6-4.6h0.1c1.3,0,2.4-1.1,2.4-2.4v-0.2\r\n                                                            c0-0.5,0.4-0.9,0.9-0.9L26.1,12.4 M26.1,10.4h-5.9c-1.6,0-2.9,1.3-2.9,2.9v0.2c0,0.2-0.2,0.4-0.4,0.4h-0.1c-3.6,0-6.6,3-6.6,6.6\r\n                                                            v6.7c0,3.6,3,6.6,6.6,6.6h12.8c3.6,0,6.6-3,6.6-6.6v-6.7c0-3.6-3-6.6-6.6-6.6h-0.1c-0.2,0-0.4-0.2-0.4-0.4v-0.2\r\n                                                            C29,11.7,27.7,10.4,26.1,10.4L26.1,10.4z\"></path>\r\n                                                    </g>\r\n                                                </g>\r\n                                                <g>\r\n                                                    <path class=\"svg-camera\" d=\"M23.2,19.6c2,0,3.5,1.6,3.5,3.5s-1.6,3.5-3.5,3.5s-3.5-1.6-3.5-3.5S21.2,19.6,23.2,19.6 M23.2,17.6\r\n                                                        c-3.1,0-5.5,2.5-5.5,5.5s2.5,5.5,5.5,5.5s5.5-2.5,5.5-5.5S26.2,17.6,23.2,17.6L23.2,17.6z\"></path>\r\n                                                </g>\r\n                                            </g>\r\n                                        </svg>\r\n                                        <div>이미지</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"img-box\" onclick=\"document.getElementById('frogueUploadFile').click();\">\r\n                                    <div>\r\n                                        <svg class=\"btn-img\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 46.3 46.3\" style=\"enable-background:new 0 0 46.3 46.3;\" xml:space=\"preserve\">\r\n                                            <path class=\"svg-file-circle\" d=\"M23.2,2c11.7,0,21.2,9.5,21.2,21.2s-9.5,21.2-21.2,21.2S2,34.9,2,23.2l0,0C2,11.5,11.5,2,23.2,2 M23.2,0\r\n                                                C10.4,0,0,10.4,0,23.2s10.4,23.2,23.2,23.2S46.3,36,46.3,23.2S36,0,23.2,0L23.2,0z\"></path>\r\n                                            <g>\r\n                                                <g>\r\n                                                    <path class=\"svg-file-box\" d=\"M24.9,13.6l5.7,6v13h-15v-19H24.9 M25,11.6h-9.7c-0.9,0-1.7,0.8-1.7,1.7v19.6c0,0.9,0.8,1.7,1.7,1.7H31\r\n                                                        c0.9,0,1.7-0.8,1.7-1.7V19.5c0-0.4-0.2-0.9-0.5-1.2l-5.9-6.1C25.9,11.8,25.5,11.7,25,11.6z\"></path>\r\n                                                    <path class=\"svg-file-line\" d=\"M23.9,12.6v7.1c0,0.5,0.4,0.9,0.9,0.9h6.8\"></path>\r\n                                                </g>\r\n                                            </g>\r\n                                        </svg>\r\n                                        <div>파일</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input type=\"file\" id=\"frogueUploadImage\" ref=\"frogueUploadImage\" accept=\"image/*\" v-on:change=\"handleFrogueImageUpload()\" style=\"position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0; \" >\r\n                            <input type=\"file\" id=\"frogueUploadFile\" ref=\"frogueUploadFile\" v-on:change=\"handleFrogueFileUpload()\" style=\"position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0; \" >\r\n                        </div>\r\n                    </div>\r\n                    <!-- user input area end -->\r\n                    <div class=\"frogue-footer\" v-if=\"adBuootnYn == 'true'\">\r\n                        <a class=\"btn-banner\" title=\"챗봇을 만드는 가장 쉬운 방법, 단비Ai 바로가기\" href=\"https://danbee.ai\" target=\"_blank\"><strong>단비Ai</strong>로 만든 챗봇 :)</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    import moment from 'moment';\r\n    import _ from 'lodash';\r\n\r\n    export default {\r\n        name: \"chatBoby\",\r\n        components: {\r\n        },\r\n        props: [\r\n          'dataChatbot',\r\n          'dataChatbotname',\r\n          'dataUser',\r\n          'dataServicename',\r\n          'dataColor',\r\n          'dataSubcolor',\r\n          'dataIconurl',\r\n          'dataLoadurl'\r\n        ],\r\n        data() {\r\n            let frogueUserId = '';\r\n            if ( typeof this.dataUser != 'undefined' && this.dataUser  != null && this.dataUser != '' ) {\r\n              frogueUserId = this.dataUser || 'frogueTestId';\r\n            }\r\n            return {\r\n                publicPath: process.env.BASE_URL,\r\n                frogueChatViewFlag: false,\r\n\r\n                inputMessage: \"\",\r\n                isContentOpen: false,\r\n\r\n                chatMsgInfo: {\r\n                    chatMsgTxt: \"\",\r\n                    sessionId: \"\",\r\n                    chatflowId: \"\",\r\n                    chatInstance: \"\",\r\n                    chatNodeId: \"\",\r\n                    chatParamId: \"\",\r\n                    chatIntentId: \"\"\r\n                },\r\n                chatList: [],\r\n                selectableResult: {\r\n                    list: [],\r\n                    type: \"\"\r\n                },\r\n                isOpened: false,\r\n                isToasting : false,\r\n                toastingText: '',\r\n\r\n                chatbotTypingIndicatorFlag: false,\r\n                userTypingIndicatorFlag: false,\r\n                quickReplyBtnFlag: false,\r\n                quickList: [],\r\n\r\n                frogueUploadImage: '',\r\n                frogueUploadFile: '',\r\n\r\n                lastOptionList: [],\r\n\r\n                chatbotId: this.dataChatbot || '5bbd93a3-00be-4054-b79a-03c4c50424bc',\r\n                userId: frogueUserId,\r\n                chatbotName: this.dataChatbotname || '단비Ai',\r\n                description: '',\r\n                imageUrl: this.dataIconurl || 'img/danbee_dew.png',\r\n                chatbotImg: this.dataIconurl || 'img/danbee_dew.png',\r\n                channelData: {},\r\n                frogueChatLoadUrl: this.dataLoadurl || 'img/frogue.svg',\r\n\r\n                serviceNames: this.dataServicename || '단비Ai',\r\n                currentChatbot: {\r\n                    chatbotImg: this.dataIconurl || 'img/danbee_dew.png',\r\n                    chatbotName: this.dataChatbotname || '단비Ai',\r\n                    chatbotId: this.dataChatbot || '5bbd93a3-00be-4054-b79a-03c4c50424bc'\r\n                },\r\n                currentUser: {\r\n                    userName: frogueUserId || ''\r\n                },\r\n                channelId: '0',\r\n                initParams: {},\r\n\r\n                demoBgImg: 'url(/img/bg_chat.png)',\r\n\r\n                colorMain: '#555a9c', //메인색\r\n                colorSub: '#ffffff', //서브색\r\n                colorButtonText: '#0084ff', //버튼 글자색\r\n                colorButtonBorder: '#c3c3c3', //버튼 라인색\r\n                colorButtonBg: '#ffffff', //버튼 배경색\r\n                colorBalloonChatbotBg: '#eef1f4', //챗봇 말풍선 배경색\r\n                colorBalloonChatbotText: '#3d3d3d', //챗봇 말풍선 글자색\r\n                colorBalloonUserBg: '#555a9c', //사용자 말풍선 배경색\r\n                colorBalloonUserText: '#ffffff', //사용자 말풍선 글자색\r\n                colorDateText: '#9b9b9b', //날짜 글자색\r\n                colorHighlight: '#ddefff', // 마우스 오버 등 하이라이트 색상\r\n                colorBg: '#7f8198', //ffrogue 전체 화면시 나오는 배경색상\r\n                adBuootnYn: 'true',  // 하단 광고 보이기\r\n                isBtnExtension: 'true' // 파일 처리 메뉴 보이기\r\n            };\r\n        },\r\n        methods: {\r\n            clickedInput :function(){\r\n                setTimeout(()=>{\r\n                    this.scrollDown();\r\n                },100);\r\n            },\r\n            sendMessage: async function(chatbotMsg, viewSentence, parameters) {\r\n\r\n                this.setQuickReplyBtnFlag(false, []);\r\n                if (this.inputMessage === \"\" && viewSentence === \"\") {\r\n                    return false;\r\n                }\r\n\r\n                //set chat message set for sending\r\n                let chatMsg = {};\r\n\r\n                if (chatbotMsg != \"\") {\r\n                    //click event\r\n                    chatMsg = chatbotMsg;\r\n                } else {\r\n                    //typing\r\n                    if (!_.isEmpty(this.selectableResult.list)) {\r\n                        //클릭 가능한 list가 있을때\r\n                        var inputMsg = this.inputMessage;\r\n                        if (this.selectableResult.type == \"btn\" || this.selectableResult.type == 'carousel' || this.selectableResult.type == 'one-carousel') {\r\n                            //console.log(this.selectableResult);\r\n                            var option = _.filter(this.selectableResult.list, function(option) {\r\n                                return option.label == inputMsg;\r\n                            });\r\n\r\n                            if (!_.isEmpty(option)) {\r\n                                if (this.selectableResult.type == \"btn\" || this.selectableResult.type == 'one-carousel' ){\r\n                                    this.initSelectableResult();\r\n                                    await this.optionClick(option[0]); //만약에 이름이 똑같아도 위에걸 보냄..\r\n                                    return false;\r\n                                } else{\r\n                                    let carouselected = false;\r\n                                    let carouselIdx = _.findIndex(this.lastOptionList, carousel =>{\r\n                                        _.forEach(carousel.optionList, option => {\r\n                                            if(option.label === inputMsg){\r\n                                                carouselected = true;\r\n                                            }\r\n                                        });\r\n                                        return carouselected;\r\n                                    });\r\n\r\n                                    this.initSelectableResult();\r\n                                    await this.optionClick(option[0], carouselIdx); //만약에 이름이 똑같아도 위에걸 보냄..\r\n                                    return false;\r\n                                }\r\n                            } else {\r\n                                if (this.selectableResult.type == \"btn\" || this.selectableResult.type == 'one-carousel' ){\r\n                                    _.forEach(this.lastOptionList, el => {\r\n                                        el.isDisabled = true;\r\n                                    });\r\n                                } else{\r\n                                    _.forEach(this.lastOptionList, (carousel, index) => {\r\n                                        console.log(index);\r\n                                        _.forEach(carousel.optionList, el  => {\r\n                                            el.isDisabled = true;\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //type == intent\r\n                            var intent = _.filter(this.selectableResult.list, function(intent) {\r\n                                return (\r\n                                    intent.intent_name == inputMsg ||\r\n                                    intent.intent_alias == inputMsg\r\n                                );\r\n                            });\r\n                            if (!_.isEmpty(intent)) {\r\n                                await this.intentClick(intent[0]);\r\n                                return false;\r\n                            } else {\r\n                                // disabled\r\n                                _.forEach(this.selectableResult.list, el => {\r\n                                    el.isDisabled = true;\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //일반 message 전송\r\n                    chatMsg.session_id = this.chatMsgInfo.sessionId;\r\n                    chatMsg.chatbot_id = this.currentChatbot.chatbotId;\r\n                    chatMsg.user_id = this.currentUser.userName;\r\n                    chatMsg.input_sentence = this.inputMessage;\r\n                    chatMsg.ins_id = this.chatMsgInfo.chatInstance;\r\n                    chatMsg.intent_id = this.chatMsgInfo.chatIntentId;\r\n                    chatMsg.chatflow_id = this.chatMsgInfo.chatflowId;\r\n                    chatMsg.node_id = this.chatMsgInfo.chatNodeId;\r\n                    chatMsg.param_id = this.chatMsgInfo.chatParamId;\r\n                }\r\n                //user chat message push\r\n                chatMsg.parameters = {};\r\n                if (this.inputMessage != \"FROGUE_IMAGE\" && this.inputMessage != \"FROGUE_FILE\") {\r\n                    var reqInput = {};\r\n                    reqInput.type = \"question\";\r\n                    // reqInput.timestamp = moment().format('YYYY-MM-DD, h:mm:ss a');\r\n                    reqInput.timestamp = moment().format(\"a h:mm\");\r\n\r\n                    if (viewSentence === \"\") {\r\n                        reqInput.sentence = this.inputMessage;\r\n                    } else {\r\n                        reqInput.sentence = viewSentence;\r\n                    }\r\n\r\n                    this.chatList.push(reqInput);\r\n                    this.scrollDown();\r\n                } else {\r\n                    chatMsg.parameters = parameters;\r\n                }\r\n                Object.assign(chatMsg.parameters, this.initParams);\r\n\r\n                // 0 : Native 로 셋팅 절대로 변경하면 안됨\r\n                chatMsg.channel_id = this.channelId||'0';\r\n                //message send\r\n                this.setChatbotTypingIndicatorFlag(true);\r\n                //axios.post('https://danbee.ai/chatflow/chatbot/v2.0/'+this.currentChatbot.chatbotId+'/message.do', chatMsg).then( res => {\r\n                axios.post('/danbee/chatbot/v2.0/'+this.currentChatbot.chatbotId+'/message.do', chatMsg).then( res => {\r\n                        this.initChatMsgInfo();\r\n                        this.initSelectableResult();\r\n\r\n                        const result = res.data.responseSet.result;\r\n                        const resultStatus = result.resultStatus || {};\r\n\r\n                        this.chatMsgInfo.sessionId = result.session_id;\r\n                        this.chatMsgInfo.chatflowId = result.chatflow_id;\r\n                        this.chatMsgInfo.chatInstance = result.ins_id;\r\n                        this.chatMsgInfo.chatNodeId = result.node_id;\r\n                        this.chatMsgInfo.chatParamId = result.param_id;\r\n                        this.chatMsgInfo.chatIntentId = result.intent_id;\r\n\r\n                        if ( resultStatus.resultCode == \"404\" && resultStatus.resultCmt == \"Not Found Chatbot\" ) {\r\n                            setTimeout(async () => {\r\n                                await this.setChatList( moment().toDate().getTime(), resultStatus.resultCmt, [], \"\", [], [], true, '');\r\n                            }, 1000);\r\n                            return;\r\n                        }\r\n                        const mainResult = result.result;\r\n                        if ( mainResult !== undefined && mainResult.length > 0 && (result.another_result === undefined || result.another_result.length == 0) ) {\r\n                            //result만 있는 경우\r\n                            mainResult.forEach((value, index) => {\r\n                                // console.log(value);\r\n                                if (index === mainResult.length - 1){\r\n                                    setTimeout(async () => {\r\n                                        await this.setChatList( value.timestamp, value.message, value.optionList, value.imgRoute, value.carouselList, value.quickList, true, value.actionData||'' );\r\n                                    }, (index+1)*1000);\r\n                                } else {\r\n                                    setTimeout(async () => {\r\n                                        await this.setChatList( value.timestamp, value.message, value.optionList, value.imgRoute, value.carouselList, value.quickList, false, value.actionData||'' );\r\n                                    }, (index+1)*1000);\r\n                                }\r\n                            });\r\n                        } else if ( result.another_result !== undefined && result.another_result.length > 0 ) {\r\n                            // 애매한 경우 관련 메시지를 채팅창에 나열한다.\r\n                            setTimeout(async () => {\r\n                                await this.setAskBackMsg(result.another_result, result.result[0].message);\r\n                            }, 2000);\r\n                        }\r\n                    },\r\n                    error => {\r\n                        //how to handle error?\r\n                        console.log(error);\r\n                    });\r\n                this.inputMessage = \"\";\r\n            },\r\n            getEventFlowMessge: function(eventName, sendParams) {\r\n\r\n                this.setQuickReplyBtnFlag(false, []);\r\n                this.setChatbotTypingIndicatorFlag(true);\r\n\r\n                let chatMsg = {};\r\n                chatMsg.session_id = this.chatMsgInfo.sessionId;\r\n                chatMsg.chatbot_id = this.currentChatbot.chatbotId;\r\n                chatMsg.user_id = this.currentUser.userName;\r\n                chatMsg.input_sentence = this.inputMessage;\r\n                chatMsg.ins_id = this.chatMsgInfo.chatInstance;\r\n                chatMsg.intent_id = this.chatMsgInfo.chatIntentId;\r\n                chatMsg.chatflow_id = this.chatMsgInfo.chatflowId;\r\n                chatMsg.node_id = this.chatMsgInfo.chatNodeId;\r\n                chatMsg.param_id = this.chatMsgInfo.chatParamId;\r\n                chatMsg.channel_id = this.channelId||'0';\r\n                chatMsg.parameters = sendParams || {};\r\n\r\n                //axios.post(\"https://danbee.ai/chatflow/searchEventFlow.do\", {\r\n                axios.post(\"/danbee/chatflow/searchEventFlow.do\", {\r\n                    chatbotId: this.chatbotId,\r\n                    eventName: eventName || ''\r\n                }).then(eventres => {\r\n                        const eventCode = eventres.data.responseSet.code;\r\n                        const eventResult = eventres.data.responseSet.result;\r\n                        if ( eventCode !== 'success' ) {\r\n                            //console.log('Not Found Event Name.');\r\n                            return false;\r\n                        }\r\n                        var eventId = eventResult.eventId || '';\r\n                        if ( !eventId ) {\r\n                            //console.log('Not Found Event Id.');\r\n                            return false;\r\n                        }\r\n                        //axios.post('https://danbee.ai/chatflow/event/v2.0/'+ this.currentChatbot.chatbotId + '/' + eventId + '/message.do', chatMsg).then(res => {\r\n                        axios.post('/danbee/console.log(index);/v2.0/' + this.currentChatbot.chatbotId + '/' + eventId + '/message.do', chatMsg).then(res => {\r\n                                this.initChatMsgInfo();\r\n                                this.initSelectableResult();\r\n\r\n                                const result = res.data.responseSet.result;\r\n                                const resultStatus = result.resultStatus || {};\r\n\r\n                                this.chatMsgInfo.sessionId = result.session_id;\r\n                                this.chatMsgInfo.chatflowId = result.chatflow_id;\r\n                                this.chatMsgInfo.chatInstance = result.ins_id;\r\n                                this.chatMsgInfo.chatNodeId = result.node_id;\r\n                                this.chatMsgInfo.chatParamId = result.param_id;\r\n                                this.chatMsgInfo.chatIntentId = result.intent_id;\r\n\r\n                                if ( resultStatus.resultCode == \"404\" && resultStatus.resultCmt == \"Not Found Chatbot\" ) {\r\n                                    setTimeout(async () => {\r\n                                        await this.setChatList( moment().toDate().getTime(), resultStatus.resultCmt, [], \"\", [], [], true, '');\r\n                                    }, 1000);\r\n                                    return;\r\n                                }\r\n                                const mainResult = result.result;\r\n                                if ( mainResult !== undefined && mainResult.length > 0 && (result.another_result === undefined || result.another_result.length == 0) ) {\r\n                                    //result만 있는 경우\r\n\r\n                                    mainResult.forEach((value, index) => {\r\n                                        if (index === mainResult.length - 1){\r\n                                            setTimeout(async () => {\r\n                                                await this.setChatList( value.timestamp, value.message, value.optionList, value.imgRoute, value.carouselList, value.quickList, true, value.actionData||'' );\r\n                                            }, (index+1)*1000);\r\n                                        } else {\r\n                                            setTimeout(async () => {\r\n                                                await this.setChatList( value.timestamp, value.message, value.optionList, value.imgRoute, value.carouselList, value.quickList, false, value.actionData||'' );\r\n                                            }, (index+1)*1000);\r\n                                        }\r\n                                    });\r\n                                } else if ( result.another_result !== undefined && result.another_result.length > 0 ) {\r\n                                    // 애매한 경우 관련 메시지를 채팅창에 나열한다.\r\n                                    setTimeout(async () => {\r\n                                        await this.setAskBackMsg(result.another_result, result.result[0].message);\r\n                                    }, 2000);\r\n                                }\r\n                            },\r\n                            error => {\r\n                                //how to handle error?\r\n                                console.log(error);\r\n                            });\r\n                    },\r\n                    eventerror => {\r\n                        //how to handle error?\r\n                        console.log(eventerror );\r\n                    });\r\n            },\r\n            getWelcomeMessage: async function() {\r\n\r\n                this.setQuickReplyBtnFlag(false, []);\r\n                this.setChatbotTypingIndicatorFlag(true);\r\n\r\n                //axios.post('https://danbee.ai/chatflow/chatbot/v2.0/'+this.currentChatbot.chatbotId+'/welcome.do', {\r\n                axios.post('/danbee/chatbot/v2.0/'+this.currentChatbot.chatbotId+'/welcome.do', {\r\n                    chatbot_id: this.currentChatbot.chatbotId,\r\n                    channel_id: this.channelId||'0',\r\n                    user_id: this.currentUser.userName,\r\n                    parameters: this.initParams\r\n                }).then(res => {\r\n\r\n                        const result = res.data.responseSet.result;\r\n                        const resultStatus = result.resultStatus || {};\r\n\r\n                        this.chatMsgInfo.sessionId = result.session_id;\r\n                        this.chatMsgInfo.chatflowId = result.chatflow_id;\r\n                        this.chatMsgInfo.chatInstance = result.ins_id;\r\n                        this.chatMsgInfo.chatNodeId = result.node_id;\r\n                        this.chatMsgInfo.chatParamId = result.param_id;\r\n                        this.chatMsgInfo.chatIntentId = result.intent_id;\r\n\r\n                        if ( resultStatus.resultCode == \"404\" && resultStatus.resultCmt == \"Not Found Chatbot\" ) {\r\n                            setTimeout(async () => {\r\n                                await this.setChatList( moment().toDate().getTime(), resultStatus.resultCmt, [], \"\", [], [], true, '');\r\n                            }, 1000);\r\n                            return;\r\n                        }\r\n\r\n                        result.result.forEach((value, index) => {\r\n                            if (index === result.result.length - 1){\r\n                                setTimeout(async () => {\r\n                                    await this.setChatList( value.timestamp, value.message, value.optionList, value.imgRoute, value.carouselList, value.quickList, true, value.actionData||'' );\r\n                                }, (index+1)*1000);\r\n                            } else {\r\n                                setTimeout(async () => {\r\n                                    await this.setChatList( value.timestamp, value.message, value.optionList, value.imgRoute, value.carouselList, value.quickList, false, value.actionData||'' );\r\n                                }, (index+1)*1000);\r\n                            }\r\n                        });\r\n                    },\r\n                    error => {\r\n                        //how to handle error?\r\n                        console.log(error);\r\n                    });\r\n            },\r\n            optionClick: async function(option, carouselIdx) {\r\n\r\n                if ( !_.isUndefined(carouselIdx) ) { // 캐러셀 카드 옵션 선택했을때\r\n\r\n                    if(option.type !== 'link' ){\r\n                        _.forEach(this.lastOptionList, (carousel, index) => {\r\n                            if ( index === carouselIdx ) {\r\n                                _.forEach(carousel.optionList, el  => {\r\n                                    if(el.label === option.label){  // value로 체크해서 퀵리플라이랑 value가 같은게있으면 버튼이 selected됨.\r\n                                        el.isSelected = true;\r\n                                    } else {\r\n                                        el.isDisabled = true;\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                _.forEach(carousel.optionList, el  => {\r\n                                    el.isDisabled = true;\r\n                                });\r\n                            }\r\n\r\n                        });\r\n                    }\r\n\r\n                } else { // one-carousel, 일반 btn 옵션 선택했을때\r\n                    if ( this.lastOptionList[0].cardTitle ){ // one-carousel\r\n                        _.forEach(this.lastOptionList, carousel => {\r\n                            _.forEach(carousel.optionList, el  => {\r\n                                el.isDisabled = true;\r\n                            });\r\n                        });\r\n                    } else { // 일반 btn 옵션\r\n                        _.forEach(this.lastOptionList, el => {\r\n                            if(el.label === option.label){\r\n                                el.isSelected = true;\r\n                            } else {\r\n                                el.isDisabled = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // link일때 퀵리플라이 사라지지않게함\r\n                if ( option.type !== 'link' ) {\r\n                  this.setQuickReplyBtnFlag(false, []);\r\n                }\r\n                switch (option.type) {\r\n                    case \"btn\": {\r\n\r\n                        let btnTriggerCommand = option.value || option.label;\r\n                        if ( btnTriggerCommand.startsWith('javascript:') ) {\r\n                            window.parent.postMessage({event:'frogue-trigger', data: btnTriggerCommand.replace('javascript:','')},'*');\r\n                        } else {\r\n                            let chatMsg = {};\r\n                            chatMsg.session_id = this.chatMsgInfo.sessionId;\r\n                            chatMsg.chatbot_id = this.currentChatbot.chatbotId;\r\n                            chatMsg.user_id = this.currentUser.userName;\r\n                            chatMsg.input_sentence = option.value || option.label; //value가 비었으면 label을 넘김\r\n                            chatMsg.ins_id = this.chatMsgInfo.chatInstance;\r\n                            chatMsg.intent_id = this.chatMsgInfo.chatIntentId;\r\n                            chatMsg.chatflow_id = this.chatMsgInfo.chatflowId;\r\n                            chatMsg.node_id = this.chatMsgInfo.chatNodeId;\r\n                            chatMsg.param_id = this.chatMsgInfo.chatParamId;\r\n\r\n                            await this.sendMessage(chatMsg, option.label, {});\r\n                        }\r\n\r\n                        if ( option.actionData ) {\r\n                            let triggerCommand = option.actionData;\r\n                            if ( triggerCommand.startsWith('parent:') ) {\r\n                                window.parent.postMessage({event:'frogue-trigger', data: triggerCommand.replace('parent:','')},'*');\r\n                            } else if ( triggerCommand.startsWith('this:') ) {\r\n                                triggerCommand = triggerCommand.replace('this:','');\r\n                                let triggerFunction = new Function(' \"use strict\"; '+triggerCommand+'; ');\r\n                                let thisTriggerFunction = triggerFunction.bind(this);\r\n                                thisTriggerFunction();\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case \"callFlow\": {\r\n                        let chatMsg = {};\r\n                        chatMsg.session_id = this.chatMsgInfo.sessionId;\r\n                        chatMsg.chatbot_id = this.currentChatbot.chatbotId;\r\n                        chatMsg.user_id = this.currentUser.userName;\r\n                        chatMsg.intent_id = option.value;\r\n                        //chatMsg.chatflow_id = this.chatMsgInfo.chatflowId;\r\n                        chatMsg.input_sentence = option.label;\r\n\r\n                        await this.sendMessage(chatMsg, option.label, {});\r\n\r\n                        if ( option.actionData ) {\r\n                            let triggerCommand = option.actionData;\r\n                            if ( triggerCommand.startsWith('parent:') ) {\r\n                                window.parent.postMessage({event:'frogue-trigger', data: triggerCommand.replace('parent:','')},'*');\r\n                            } else if ( triggerCommand.startsWith('this:') ) {\r\n                                triggerCommand = triggerCommand.replace('this:','');\r\n                                let triggerFunction = new Function(' \"use strict\"; '+triggerCommand+'; ');\r\n                                let thisTriggerFunction = triggerFunction.bind(this);\r\n                                thisTriggerFunction();\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case \"call\": {\r\n                        if (typeof window.orientation !== \"undefined\") {\r\n                            var url = \"tel:\" + option.value;\r\n                            var linkElement = document.createElement(\"a\");\r\n                            try {\r\n                                linkElement.setAttribute(\"href\", url);\r\n                                var clickEvent = new MouseEvent(\"click\", { view: window, bubbles: true, cancelable: false });\r\n                                linkElement.dispatchEvent(clickEvent);\r\n                            } catch (ex) {\r\n                                let tempMessage = {};\r\n                                tempMessage.type = \"answer\";\r\n                                tempMessage.sentence = \"여기로 전화해보세요 : \" + option.value;\r\n                                tempMessage.imgRoute = '';\r\n                                tempMessage.optionList = [];\r\n                                tempMessage.quickList = [];\r\n                                tempMessage.timestamp = moment().format(\"a h:mm\");\r\n\r\n                                this.chatList.push(tempMessage);\r\n                                this.inputMessage = \"\";\r\n                                this.scrollDown();\r\n                            }\r\n                        } else {\r\n                            let tempMessage = {};\r\n                            tempMessage.type = \"answer\";\r\n                            tempMessage.sentence = \"여기로 전화해보세요 : \" + option.value;\r\n                            tempMessage.imgRoute = '';\r\n                            tempMessage.optionList = [];\r\n                            tempMessage.quickList = [];\r\n                            tempMessage.timestamp = moment().format(\"a h:mm\");\r\n\r\n                            this.chatList.push(tempMessage);\r\n                            this.inputMessage = \"\";\r\n                            this.scrollDown();\r\n                        }\r\n\r\n                        if ( option.actionData ) {\r\n                            let triggerCommand = option.actionData;\r\n                            if ( triggerCommand.startsWith('parent:') ) {\r\n                                window.parent.postMessage({event:'frogue-trigger', data: triggerCommand.replace('parent:','')},'*');\r\n                            } else if ( triggerCommand.startsWith('this:') ) {\r\n                                triggerCommand = triggerCommand.replace('this:','');\r\n                                let triggerFunction = new Function(' \"use strict\"; '+triggerCommand+'; ');\r\n                                let thisTriggerFunction = triggerFunction.bind(this);\r\n                                thisTriggerFunction();\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case \"quick\": {\r\n                        let tempMessage = {};\r\n                        tempMessage.session_id = this.chatMsgInfo.sessionId;\r\n                        tempMessage.chatbot_id = this.currentChatbot.chatbotId;\r\n                        tempMessage.user_id = this.currentUser.userName;\r\n                        tempMessage.input_sentence = option.value || option.label; //value가 비었으면 label을 넘김\r\n                        tempMessage.ins_id = this.chatMsgInfo.chatInstance;\r\n                        tempMessage.intent_id = this.chatMsgInfo.chatIntentId;\r\n                        tempMessage.chatflow_id = this.chatMsgInfo.chatflowId;\r\n                        tempMessage.node_id = this.chatMsgInfo.chatNodeId;\r\n                        tempMessage.param_id = this.chatMsgInfo.chatParamId;\r\n                        this.sendMessage(tempMessage, option.label, {});\r\n\r\n                        if (option.actionData) {\r\n                          let triggerCommand = option.actionData;\r\n                          if (triggerCommand.startsWith('parent:')) {\r\n                            window.parent.postMessage({\r\n                              event: 'frogue-trigger',\r\n                              data: triggerCommand.replace('parent:', '')\r\n                            }, '*');\r\n                          } else if (triggerCommand.startsWith('this:')) {\r\n                            triggerCommand = triggerCommand.replace('this:', '');\r\n                            let triggerFunction = new Function(' \"use strict\"; ' + triggerCommand + '; ');\r\n                            let thisTriggerFunction = triggerFunction.bind(this);\r\n                            thisTriggerFunction();\r\n                          }\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case \"action\": {\r\n                        let triggerCommand = option.actionData || option.value || option.label;\r\n\r\n                        if ( triggerCommand.startsWith('parent:') ) {\r\n                            window.parent.postMessage({event:'frogue-trigger', data: triggerCommand.replace('parent:','')},'*');\r\n                        } else if ( triggerCommand.startsWith('this:') ) {\r\n                            triggerCommand = triggerCommand.replace('this:','');\r\n                            let triggerFunction = new Function(' \"use strict\"; '+triggerCommand+'; ');\r\n                            let thisTriggerFunction = triggerFunction.bind(this);\r\n                            thisTriggerFunction();\r\n                        }\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        window.open(option.value, \"_blank\");\r\n                        this.inputMessage = \"\";\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n            intentClick: async function(intent) {\r\n                this.setQuickReplyBtnFlag(false, []);\r\n                let chatMsg = {};\r\n                var viewSentence = intent.intent_alias || intent.intent_name;\r\n\r\n                chatMsg.session_id = this.chatMsgInfo.sessionId;\r\n                chatMsg.chatbot_id = this.currentChatbot.chatbotId;\r\n                chatMsg.input_sentence = viewSentence; //intent.sentence;\r\n                chatMsg.ins_id = this.chatMsgInfo.chatInstance;\r\n                chatMsg.intent_id = intent.intent_id;\r\n                chatMsg.chatflow_id = this.chatMsgInfo.chatflowId;\r\n                chatMsg.node_id = this.chatMsgInfo.chatNodeId;\r\n                chatMsg.param_id = this.chatMsgInfo.chatParamId;\r\n                chatMsg.user_id = this.currentUser.userName;\r\n\r\n                // disabled\r\n                _.forEach(this.selectableResult.list, el => {\r\n                    if( el.intent_id === intent.intent_id ) {\r\n                        el.isSelected = true;\r\n                    } else {\r\n                        el.isDisabled = true;\r\n                    }\r\n                });\r\n\r\n                this.initSelectableResult();\r\n                this.sendMessage(chatMsg, viewSentence, {});\r\n            },\r\n            clearChatMsg: function() {\r\n                //현재 사용하지 않음\r\n                this.chatList = [];\r\n                this.initChatMsgInfo();\r\n                this.getWelcomeMessage();\r\n            },\r\n            shareChatURL: function() {\r\n                //현재 사용하지 않음\r\n                let sharedUrl = \"/?chatbot_id=\" + this.currentChatbot.chatbotId;\r\n                this.$copyText(sharedUrl).then(function(e) {\r\n                    alert(\"URL이 복사되었어요\");\r\n                    console.log(e);\r\n                }, function(e) {\r\n                    alert(\"URL 복사를 할 수 없어요\");\r\n                    console.log(e);\r\n                });\r\n            },\r\n            setChatList: async function( messagetimestamp, message, optionList, imgRoute, carouselList, quickList, lastFlag, actionData ) {\r\n                //empty message\r\n                if ( message == \"\" && optionList.length == 0 && imgRoute == \"\" && carouselList.length == 0 ) {\r\n                    this.setChatbotTypingIndicatorFlag(false);\r\n                    return false;\r\n                }\r\n                var resultchatDetail = {};\r\n\r\n                if (carouselList.length > 0) {\r\n                    //carousel\r\n                    this.selectableResult.type = \"carousel\";\r\n                    carouselList.forEach(carousel => {\r\n                        carousel.imgRoute = encodeURI(carousel.imgRoute);\r\n                        this.selectableResult.list = this.selectableResult.list.concat(\r\n                            carousel.optionList\r\n                        );\r\n                    });\r\n\r\n                    resultchatDetail.type = \"answer\";\r\n                    resultchatDetail.sentence = message;\r\n                    resultchatDetail.timestamp = moment().format(\"a h:mm\");\r\n\r\n                    if (carouselList.length == 1) {\r\n                        resultchatDetail.nodeType = \"one_carousel\";\r\n                        resultchatDetail.cardTitle = carouselList[0].cardTitle;\r\n                        resultchatDetail.subCardTitle = carouselList[0].subCardTitle;\r\n                        resultchatDetail.imgRoute = carouselList[0].imgRoute;\r\n                        resultchatDetail.optionList = carouselList[0].optionList;\r\n                        resultchatDetail.quickList = quickList || [];\r\n\r\n                        this.selectableResult.type = \"one-carousel\";\r\n                        this.selectableResult.list = this.selectableResult.list.concat(resultchatDetail.quickList);\r\n                    } else {\r\n                        resultchatDetail.nodeType = \"carousel\";\r\n                        resultchatDetail.carouselList = carouselList;\r\n                        resultchatDetail.quickList = quickList || [];\r\n                    }\r\n                    if (resultchatDetail.quickList.length > 0) {\r\n                        //console.log('one-carousel로 셋팅');\r\n                        // this.selectableResult.type = \"one-carousel\";\r\n                        // this.selectableResult.list = this.selectableResult.list.concat(resultchatDetail.quickList);\r\n\r\n                        if ( lastFlag ) {\r\n                            this.setQuickReplyBtnFlag(true, resultchatDetail.quickList);\r\n                        }\r\n                    }\r\n                } else {\r\n                    resultchatDetail.type = \"answer\";\r\n                    resultchatDetail.sentence = message;\r\n                    resultchatDetail.imgRoute = imgRoute;\r\n                    resultchatDetail.optionList = optionList;\r\n                    resultchatDetail.quickList =\r\n                        _.filter(optionList, function(option) {\r\n                            return option.type == \"quick\";\r\n                        }) || [];\r\n\r\n                    resultchatDetail.timestamp = moment().format(\"a h:mm\");\r\n                    // resultchatDetail.timestamp = moment().format('YYYY-MM-DD, h:mm:ss a');\r\n                    if (optionList.length > 0) {\r\n                        this.selectableResult.type = \"btn\";\r\n                        this.selectableResult.list = this.selectableResult.list.concat(optionList);\r\n                    }\r\n                    if ( lastFlag && resultchatDetail.quickList.length > 0) {\r\n                        this.setQuickReplyBtnFlag(true, resultchatDetail.quickList);\r\n                    }\r\n                }\r\n                if ( lastFlag ) {\r\n                    this.setChatbotTypingIndicatorFlag(false);\r\n\r\n                    if (carouselList.length > 1 ) {\r\n                        this.lastOptionList = carouselList;\r\n                    } else {\r\n                        this.lastOptionList = resultchatDetail.optionList;\r\n                    }\r\n\r\n                } else {\r\n                    if (carouselList.length > 1 ) {\r\n                        _.forEach(carouselList, carousel => {\r\n                            _.forEach(carousel.optionList, option => {\r\n                                option.isDisabled = true;\r\n                            });\r\n                        });\r\n\r\n                    } else {\r\n                        _.forEach(resultchatDetail.optionList, option => {\r\n                            option.isDisabled = true;\r\n                        });\r\n                    }\r\n                }\r\n                if ( actionData ) {\r\n                    if ( actionData.startsWith('parent:') ) {\r\n                        window.parent.postMessage({event:'frogue-trigger', data: actionData.replace('parent:','')},'*');\r\n                    } else if ( actionData.startsWith('this:') ) {\r\n                        actionData = actionData.replace('this:','');\r\n                        var actionDataFunction = new Function(' \"use strict\"; '+actionData+'; ');\r\n                        var thisActionDataFunction = actionDataFunction.bind(this);\r\n                        thisActionDataFunction();\r\n                    }\r\n                }\r\n                this.chatList.push(resultchatDetail);\r\n                this.scrollDown();\r\n\r\n            },\r\n            setAskBackMsg: async function(anotherResult, message) {\r\n                this.setQuickReplyBtnFlag(false, []);\r\n                var timeId = moment();\r\n                this.selectableResult.type = \"intent\";\r\n                this.selectableResult.list = anotherResult;\r\n\r\n                var resInput = {\r\n                    type: \"askBack\",\r\n                    sentence: message,\r\n                    timestamp: moment().format(\"a h:mm\"),\r\n                    timeId: timeId,\r\n                    intentList: anotherResult\r\n                };\r\n\r\n                this.setChatbotTypingIndicatorFlag(false);\r\n                this.chatList.push(resInput);\r\n\r\n                this.scrollDown();\r\n            },\r\n            initChatMsgInfo: function() {\r\n                this.chatMsgInfo.chatMsgTxt = \"\";\r\n                this.chatMsgInfo.sessionId = \"\";\r\n                this.chatMsgInfo.chatflowId = \"\";\r\n                this.chatMsgInfo.chatInstance = \"\";\r\n                this.chatMsgInfo.chatNodeId = \"\";\r\n                this.chatMsgInfo.chatParamId = \"\";\r\n                this.chatMsgInfo.chatIntentId = \"\";\r\n            },\r\n            scrollDown: function() {\r\n                //image 늦게 뜰때 끝까지 안내려가는 문제 추후 수정 필요\r\n                setTimeout(() => {\r\n                    let chattingPanel = document.querySelector(\"#chattingPanel\");\r\n                    chattingPanel.scrollTop = chattingPanel.scrollHeight;\r\n                    this.changeHeightOnePx();\r\n                }, 200);\r\n            },\r\n            initSelectableResult: function() {\r\n                this.selectableResult.list = [];\r\n                this.selectableResult.type = \"\";\r\n            },\r\n            changeHeightOnePx: function() {\r\n                let carouselNodes = this.$refs.carousel;\r\n                if (carouselNodes && carouselNodes.length > 0) {\r\n                    let carouselNode = carouselNodes[carouselNodes.length - 1];\r\n                    let agileGetWidth = carouselNode.getWidth;\r\n                    let agileReload = carouselNode.reload;\r\n                    setTimeout(() => {\r\n                        agileGetWidth();\r\n                        agileReload();\r\n                    }, 1);\r\n                    agileGetWidth();\r\n                    agileReload();\r\n                }\r\n            },\r\n            openExtension: function() {\r\n                this.isOpened = !this.isOpened;\r\n            },\r\n            toastingOpen: function(toastingText) {\r\n                this.toastingText = toastingText;\r\n                this.isToasting = true;\r\n                setTimeout(() => {\r\n                    this.toastingClose();\r\n                }, 3000);\r\n            },\r\n            toastingClose: function() {\r\n                this.toastingText = '';\r\n                this.isToasting = false;\r\n            },\r\n            setChatbotTypingIndicatorFlag: function(flag) {\r\n                this.chatbotTypingIndicatorFlag = flag;\r\n                this.scrollDown();\r\n            },\r\n            setUserTypingIndicatorFlag: function(flag) {\r\n                this.userTypingIndicatorFlag = flag;\r\n                this.scrollDown();\r\n            },\r\n            setQuickReplyBtnFlag: function(flag, quickList) {\r\n                if ( flag ) {\r\n                    setTimeout(()=>{\r\n                        this.quickReplyBtnFlag = flag;\r\n                        this.quickList = quickList;\r\n                        this.scrollDown();\r\n                    }, 500);\r\n                } else {\r\n                    this.quickReplyBtnFlag = flag;\r\n                    this.quickList = quickList;\r\n                    this.scrollDown();\r\n                }\r\n            },\r\n            setMouseWheel: function(index, event) {\r\n                event = window.event || event;\r\n                var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n                document.getElementById('quickList_'+index).scrollLeft -= (delta * 40);\r\n            },\r\n            handleFrogueImageUpload: function() {\r\n\r\n                this.frogueUploadImage = this.$refs.frogueUploadImage.files[0];\r\n\r\n                if ( this.frogueUploadImage && this.frogueUploadImage != '' ) {\r\n\r\n                    this.isOpened = false;\r\n                    this.setUserTypingIndicatorFlag(true);\r\n\r\n                    let formData = new FormData();\r\n                    formData.append(\"image\", this.frogueUploadImage);\r\n\r\n                    alert('image upload');\r\n                    this.setUserTypingIndicatorFlag(false);\r\n                    /*\r\n                    axios.post(\"파일업로드 주소\", formData, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\"\r\n                        }\r\n                    }).then( res => {\r\n                        //console.log(res);\r\n                        this.frogueUploadImage = '';\r\n                        this.$refs.frogueUploadImage.value = '';\r\n                        this.setUserTypingIndicatorFlag(false);\r\n                        let frogueImageUploadUrl = res.data.location || \"\";\r\n                        frogueImageUploadUrl = ''; // 이미지 셋팅해서 보여주기\r\n                        //console.log(frogueImageUploadUrl);\r\n                        var reqImageInput = {};\r\n                        reqImageInput.type = \"imageUpload\";\r\n                        reqImageInput.timestamp = moment().format(\"a h:mm\");\r\n                        reqImageInput.sentence = frogueImageUploadUrl;\r\n                        this.chatList.push(reqImageInput);\r\n                        this.scrollDown();\r\n\r\n                        this.inputMessage = \"FROGUE_IMAGE\";  // 프로그 이미지로 말걸기\r\n                        this.sendMessage(\"\", \"\", {FROGUE_IMAGE: frogueImageUploadUrl || \"\"});\r\n                    }, error => {\r\n                        //console.log('FAILURE!!');\r\n                        console.log(error);\r\n                        this.frogueUploadImage = \"\";\r\n                        this.$refs.frogueUploadImage.value = '';\r\n                        this.setUserTypingIndicatorFlag(false);\r\n                        this.toastingOpen('이미지만 업로드가 가능합니다.');\r\n                    });\r\n                    */\r\n                }\r\n            },\r\n            handleFrogueFileUpload: function() {\r\n\r\n                this.frogueUploadFile = this.$refs.frogueUploadFile.files[0];\r\n\r\n                if (this.frogueUploadFile && this.frogueUploadFile != '') {\r\n\r\n                    this.isOpened = false;\r\n                    this.setUserTypingIndicatorFlag(true);\r\n\r\n                    let formData = new FormData();\r\n                    formData.append(\"file\", this.frogueUploadFile);\r\n\r\n                    alert('file upload');\r\n                    this.setUserTypingIndicatorFlag(false);\r\n\r\n                    /*\r\n                    axios.post(\"파일업로드 주소\", formData, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\"\r\n                        }\r\n                    }).then(res => {\r\n                        //console.log(res);\r\n                        this.frogueUploadFile = '';\r\n                        this.$refs.frogueUploadFile.value = '';\r\n                        this.setUserTypingIndicatorFlag(false);\r\n                        let frogueFileUploadUrl = res.data.location || \"\";\r\n                        frogueFileUploadUrl = ''; // 파일 셋팅해서 보여주기\r\n                        //console.log(frogueImageUploadUrl);\r\n                        var reqFileInput = {};\r\n                        reqFileInput.type = \"fileUpload\";\r\n                        reqFileInput.timestamp = moment().format(\"a h:mm\");\r\n                        reqFileInput.sentence = frogueFileUploadUrl;\r\n                        this.chatList.push(reqFileInput);\r\n                        this.scrollDown();\r\n\r\n                        this.inputMessage = \"FROGUE_FILE\";  // 프로그 파일로 말걸기\r\n                        this.sendMessage(\"\", \"\", {FROGUE_FILE: frogueFileUploadUrl || \"\"});\r\n                    }, error => {\r\n                        //console.log('FAILURE!!');\r\n                        console.log(error);\r\n                        this.frogueUploadFile = \"\";\r\n                        this.$refs.frogueUploadFile.value = '';\r\n                        this.setUserTypingIndicatorFlag(false);\r\n                        this.toastingOpen('파일업로드를 실패하였습니다..');\r\n                    });\r\n                    */\r\n                }\r\n            },\r\n            capitalize(s) {\r\n                if (s.length < 1) {\r\n                    return s;\r\n                }\r\n                return s.charAt(0).toUpperCase() + s.slice(1);\r\n            },\r\n            danbee_sleep(n) {\r\n\r\n                const date = Date.now();\r\n                let currentDate = null;\r\n                do {\r\n                    currentDate = Date.now();\r\n                } while (currentDate - date < n);\r\n\r\n            }\r\n        },\r\n        created() {\r\n        },\r\n        beforeDestroy() {\r\n        },\r\n        beforeMount() {\r\n            this.getWelcomeMessage();\r\n        },\r\n        computed: {\r\n        },\r\n        mounted() {\r\n\r\n            setTimeout(() => {\r\n                this.frogueChatViewFlag = true;\r\n            }, 2000);\r\n\r\n        },\r\n        directives: {\r\n            focus: {\r\n                // 디렉티브 정의\r\n                inserted: function(el) {\r\n                    // Focus the element\r\n                    el.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    /* global styles :: 캐로셀 관련된 것만 글로벌로 잡아놨음 */\r\n    /*\r\n    $frogue-color-main: var(--color-main); //메인색\r\n    $frogue-color-sub: var(--color-sub); //서브색\r\n    $frogue-color-button-text: var(--color-button-text); //버튼 글자색\r\n    $frogue-color-button-border: var(--color-button-border); //버튼 라인색\r\n    $frogue-color-button-bg: var(--color-button-bg); //버튼 배경색\r\n    $frogue-color-balloon-chatbot-bg: var(--color-balloon-chatbot-bg ); //챗봇 말풍선 배경색\r\n    $frogue-color-balloon-chatbot-text: var(--color-balloon-chatbot-text); //챗봇 말풍선 글자색\r\n    $frogue-color-balloon-user-bg: var(--color-balloon-user-bg); //사용자 말풍선 배경색\r\n    $frogue-color-balloon-user-text: var(--color-balloon-user-text); //사용자 말풍선 글자색\r\n    $frogue-color-date-text: var(--color-date-text); //날짜 글자색\r\n    $frogue-color-highlight: var(--color-highlight); // 마우스 오버 등 하이라이트 색상\r\n    $frogue-color-bg: var(--color-bg); //frogue 전체 화면시 나오는 배경색상\r\n    $frogue-chat-demo-bg: var(--demo-bg-img);\r\n    */\r\n    $frogue-color-main: #555a9c; //메인색\r\n    $frogue-color-sub: #ffffff; //서브색\r\n    $frogue-color-button-text: #0084ff; //버튼 글자색\r\n    $frogue-color-button-border: #c3c3c3; //버튼 라인색\r\n    $frogue-color-button-bg: #ffffff; //버튼 배경색\r\n    $frogue-color-balloon-chatbot-bg: #eef1f4; //챗봇 말풍선 배경색\r\n    $frogue-color-balloon-chatbot-text: #3d3d3d; //챗봇 말풍선 글자색\r\n    $frogue-color-balloon-user-bg: #555a9c; //사용자 말풍선 배경색\r\n    $frogue-color-balloon-user-text: #ffffff; //사용자 말풍선 글자색\r\n    $frogue-color-date-text: #9b9b9b; //날짜 글자색\r\n    $frogue-color-highlight: #ddefff; // 마우스 오버 등 하이라이트 색상\r\n    $frogue-color-bg: #7f8198; //frogue 전체 화면시 나오는 배경색상\r\n    $frogue-chat-demo-bg: url(/img/bg_chat.png);\r\n    //\"chatbotIconimg\":\"https://danbee.ai/platformfile/f90748fe-1f25-4192-ab8c-94c77444b136/20200319141024-bot_icon_mod.gif\",\r\n    //\"chatbotLoadimg\":\"https://danbee.ai/platformfile/f90748fe-1f25-4192-ab8c-94c77444b136/20200317154950-bot_loading.gif\",\r\n\r\n    .slide {\r\n        color: #fff;\r\n        position: relative;\r\n\r\n        &--1 {\r\n            background-color: #f1c40f;\r\n        }\r\n    }\r\n    .agile {\r\n        .db-carousel-title {\r\n            display: block;\r\n            text-align: left;\r\n            font-weight: bold;\r\n            color: $frogue-color-balloon-chatbot-text;\r\n            margin-top: 4px;\r\n        }\r\n        .db-carousel-desc {\r\n            color: $frogue-color-balloon-chatbot-text;\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    .agile__arrow {\r\n        background: none;\r\n    }\r\n    .agile__dots {\r\n        position: absolute;\r\n        top: 220px;\r\n        right: 0;\r\n        left:0;\r\n        -ms-flex-align: center;\r\n        align-items: center;\r\n        display: block;\r\n        list-style: none;\r\n        padding: 0;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        margin: 10px 0;\r\n    }\r\n    .agile__dot {\r\n        margin: 0 3px;\r\n        display: inline-block;\r\n        button {\r\n            background-color: rgba(255, 255, 255, 0.3);\r\n            border: 1px solid rgba(0, 0, 0, 0.4);\r\n            border-radius: 50%;\r\n            cursor: pointer;\r\n            display: block;\r\n            height: 13px;\r\n            font-size: 0px;\r\n            line-height: 0;\r\n            margin: 0;\r\n            transition-duration: 0.3s;\r\n            width: 4px;\r\n        }\r\n    }\r\n    .agile__dot--current {\r\n        button {\r\n            background-color: rgba(70, 70, 70, 1);\r\n        }\r\n    }\r\n    .agile__dot:hover button {\r\n        background-color: rgba(0, 0, 0, 0.3);\r\n    }\r\n    .agile__arrow {\r\n        background: $frogue-color-button-bg;\r\n        border: 1px solid $frogue-color-button-border;\r\n        top: 110px;\r\n        margin: 0;\r\n        padding: 3px 0 0 0;\r\n        position: absolute;\r\n        transition-duration: 0.3s;\r\n        width: 20px;\r\n        svg {\r\n            fill: $frogue-color-button-text;\r\n            opacity: 0.5;\r\n        }\r\n        #arrow-svg {\r\n            fill: #888;\r\n            height: 20px;\r\n            transition-duration: 0.3s;\r\n        }\r\n        &:hover {\r\n            background: $frogue-color-highlight;\r\n            cursor: pointer;\r\n            svg {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n    .agile__arrow--prev {\r\n        left: 0;\r\n        border-left: 0;\r\n        border-radius: 0 6px 6px 0;\r\n    }\r\n    .agile__arrow--next {\r\n        right: 0;\r\n        border-right: 0;\r\n        border-radius: 6px 0 0 6px;\r\n    }\r\n\r\n    @media all and (-ms-high-contrast:none)\r\n    {\r\n        .agile__arrow { height:28px; padding-top:0;} /* IE10 */\r\n        *::-ms-backdrop, .agile__arrow { height:28px;padding-top:0;} /* IE11 */\r\n\r\n        .agile__dot button {height:18px;} /* IE10 */\r\n        *::-ms-backdrop, .agile__dot button { height:18px;} /* IE11 */\r\n    }\r\n\r\n    svg:not(:root) {\r\n        overflow: hidden;\r\n    }\r\n</style>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n    // Frogue 채팅창 전반에 대한 SCSS\r\n    //@import url(https://fonts.googleapis.com/earlyaccess/notosanskr.css);\r\n    @import url(/css/NotoSansKR-Hestia.css);\r\n    // colorMain = '#555a9c'; //메인색\r\n    // colorSub = '#ffffff'; //서브색\r\n    // colorButtonText = '#0084ff'; //버튼 글자색\r\n    // colorButtonBorder = '#c3c3c3'; //버튼 라인색\r\n    // colorButtonBg = '#ffffff'; //버튼 배경색\r\n    // colorBalloonChatbotBg = '#eef1f4'; //챗봇 말풍선 배경색\r\n    // colorBalloonChatbotText = '#3d3d3d'; //챗봇 말풍선 글자색\r\n    // colorBalloonUserBg = '#555a9c'; //사용자 말풍선 배경색\r\n    // colorBalloonUserText = '#ffffff'; //사용자 말풍선 글자색\r\n    // colorDateText = '#9b9b9b'; //날짜 글자색\r\n    // colorHighlight = '#ddefff'; // 마우스 오버 등 하이라이트 색상\r\n    // colorBg = '#7f8198'; //frogue 전체 화면시 나오는 배경색상\r\n    /*\r\n    $frogue-color-main: var(--color-main); //메인색\r\n    $frogue-color-sub: var(--color-sub); //서브색\r\n    $frogue-color-button-text: var(--color-button-text); //버튼 글자색\r\n    $frogue-color-button-border: var(--color-button-border); //버튼 라인색\r\n    $frogue-color-button-bg: var(--color-button-bg); //버튼 배경색\r\n    $frogue-color-balloon-chatbot-bg: var(--color-balloon-chatbot-bg ); //챗봇 말풍선 배경색\r\n    $frogue-color-balloon-chatbot-text: var(--color-balloon-chatbot-text); //챗봇 말풍선 글자색\r\n    $frogue-color-balloon-user-bg: var(--color-balloon-user-bg); //사용자 말풍선 배경색\r\n    $frogue-color-balloon-user-text: var(--color-balloon-user-text); //사용자 말풍선 글자색\r\n    $frogue-color-date-text: var(--color-date-text); //날짜 글자색\r\n    $frogue-color-highlight: var(--color-highlight); // 마우스 오버 등 하이라이트 색상\r\n    $frogue-color-bg: var(--color-bg); //frogue 전체 화면시 나오는 배경색상\r\n    $frogue-chat-demo-bg: var(--demo-bg-img);\r\n    */\r\n    $frogue-color-main: #555a9c; //메인색\r\n    $frogue-color-sub: #ffffff; //서브색\r\n    $frogue-color-button-text: #0084ff; //버튼 글자색\r\n    $frogue-color-button-border: #c3c3c3; //버튼 라인색\r\n    $frogue-color-button-bg: #ffffff; //버튼 배경색\r\n    $frogue-color-balloon-chatbot-bg: #eef1f4; //챗봇 말풍선 배경색\r\n    $frogue-color-balloon-chatbot-text: #3d3d3d; //챗봇 말풍선 글자색\r\n    $frogue-color-balloon-user-bg: #555a9c; //사용자 말풍선 배경색\r\n    $frogue-color-balloon-user-text: #ffffff; //사용자 말풍선 글자색\r\n    $frogue-color-date-text: #9b9b9b; //날짜 글자색\r\n    $frogue-color-highlight: #ddefff; // 마우스 오버 등 하이라이트 색상\r\n    $frogue-color-bg: #7f8198; //frogue 전체 화면시 나오는 배경색상\r\n    $frogue-chat-demo-bg: url(/img/bg_chat.png);\r\n    //\"chatbotIconimg\":\"https://danbee.ai/platformfile/f90748fe-1f25-4192-ab8c-94c77444b136/20200319141024-bot_icon_mod.gif\",\r\n    //\"chatbotLoadimg\":\"https://danbee.ai/platformfile/f90748fe-1f25-4192-ab8c-94c77444b136/20200317154950-bot_loading.gif\",\r\n\r\n    *,\r\n    body,\r\n    html {\r\n        font-size: 14px;\r\n        letter-spacing: -0.08px;\r\n        padding: 0;\r\n        margin: 0;\r\n        word-break: keep-all;\r\n        word-wrap: break-word;\r\n        white-space: pre-line;\r\n        text-align: left;\r\n    }\r\n    body,\r\n    html {\r\n        font-family: \"Noto Sans KR\", sans-serif;\r\n    }\r\n    body{\r\n        position:relative;\r\n        overflow:hidden;\r\n    }\r\n    button:focus,\r\n    input:focus {\r\n        /* 클릭 영역에 박스 생기는 현상 제거 */\r\n        outline: none;\r\n    }\r\n\r\n    input[type=button], button {\r\n        min-width: 24px !important;\r\n    }\r\n\r\n    .container{\r\n        background: radial-gradient( #fff, #c4c4c4 );\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        height: 100% !important;\r\n    }\r\n    .loading-page{\r\n        text-align: center;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin-top: -120px;\r\n        margin-left: -50px;\r\n        h4{\r\n            margin: 20px auto 0 auto;\r\n            font-weight: bold;\r\n            font-size: 14px;\r\n            color: #3d3d3d;\r\n        }\r\n        div{\r\n            margin: 8px;\r\n            font-size: 12px;\r\n        }\r\n        img{\r\n            margin-top: 10px;\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n    }\r\n\r\n    .svg-extension-circle {\r\n        fill: $frogue-color-main;\r\n    }\r\n    .svg-extension-line {\r\n        fill: none;\r\n        stroke: $frogue-color-main;\r\n        stroke-miterlimit: 10;\r\n        stroke-width: 2.4px;\r\n    }\r\n    .svg-send-wing{fill: $frogue-color-main;}\r\n    .svg-send-body{fill: $frogue-color-main;opacity:0.8;}\r\n    .svg-camera{fill: $frogue-color-main}\r\n    .svg-file-circle{fill: $frogue-color-main}\r\n    .svg-file-box{fill: $frogue-color-main}\r\n    .svg-file-line{fill:none; stroke:$frogue-color-main; stroke-width:2; stroke-linejoin:round;}\r\n\r\n    /*frogue가 노는 연못 (배경)*/\r\n    .frogue-pond {\r\n        background: $frogue-chat-demo-bg;\r\n        //background-size:cover;\r\n        //background-position:center center;\r\n        // background-image : url(\"/img/bg_chat.png\");\r\n        background-color: $frogue-color-bg;\r\n        text-align: center;\r\n        height: 100% !important;\r\n        overflow: hidden;\r\n    }\r\n\r\n    /*-- frogue-screen, 전체 스크린 레이아웃 --*/\r\n    .frogue-screen {\r\n        height: 100%;\r\n        width: 100%;\r\n        max-width: 540px;\r\n        position: relative;\r\n        text-align: center;\r\n        display: inline-block;\r\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    }\r\n    .frogue-container {\r\n        /*전체 컨테이너 */\r\n        background-color: $frogue-color-sub;\r\n        height: 60vh;\r\n        min-height: 100%;\r\n        border: none;\r\n        box-shadow: none;\r\n        .frogue-content-wrapper {\r\n            /* 대화 콘텐츠 영역 레아이웃(사이징) */\r\n            height: 95%;\r\n            height: unquote(\"-webkit-calc(100% - 118px)\");\r\n            height: unquote(\"-moz-calc(100% - 118px)\");\r\n            height: unquote(\"calc(100% - 118px)\");\r\n            /*닫히는 애니메이션*/\r\n            -webkit-transition: all 0.4s ease-in;\r\n            -moz-transition: all 0.4s ease-in;\r\n            -ms-transition: all 0.4s ease-in;\r\n            -o-transition: all 0.4s ease-in;\r\n            transition: all 0.4s ease-in;\r\n            &.opened {\r\n                height: 90%;\r\n                height: unquote(\"-webkit-calc(100% - 256px)\");\r\n                height: unquote(\"-moz-calc(100% - 256px)\");\r\n                height: unquote(\"calc(100% - 256px)\");\r\n                /*열리는 애니메이션*/\r\n                -webkit-transition: all 0.4s ease-out;\r\n                -moz-transition: all 0.4s ease-out;\r\n                -ms-transition: all 0.4s ease-out;\r\n                -o-transition: all 0.4s ease-out;\r\n                transition: all 0.4s ease-out;\r\n            }\r\n            &.quick-button-mode {\r\n                /*퀵버튼이 있을 때 사이즈*/\r\n                height: 97%;\r\n                height: unquote(\"-webkit-calc(100% - 196px)\");\r\n                height: unquote(\"-moz-calc(100% - 196px)\");\r\n                height: unquote(\"calc(100% - 196px)\");\r\n                /*닫히는 애니메이션*/\r\n                -webkit-transition: all 0.4s ease-in;\r\n                -moz-transition: all 0.4s ease-in;\r\n                -ms-transition: all 0.4s ease-in;\r\n                -o-transition: all 0.4s ease-in;\r\n                transition: all 0.4s ease-in;\r\n            }\r\n        }\r\n\r\n        .frogue-header {\r\n            /* 헤더 영역 */\r\n            display: block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            height: 60px;\r\n            overflow:hidden;\r\n            padding: 0 10px 0 10px;\r\n            background: $frogue-color-main;\r\n            z-index: 2000;\r\n            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n            .pull-left {\r\n                float: left;\r\n                .chatbot-profile-wrapper {\r\n                    position: relative;\r\n                    display: inline-block;\r\n                    width: 40px;\r\n                    height: 40px;\r\n                    border-radius: 50%;\r\n                    margin-top: 10px;\r\n                    text-align: center;\r\n                    -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\r\n                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\r\n                    margin-right: 7px;\r\n                    img {\r\n                        position: absolute;\r\n                        border-radius: 50%;\r\n                        height: 40px;\r\n                        left: 50%;\r\n                        margin-left: -20px;\r\n                        top: 50%;\r\n                        margin-top: -20px;\r\n                    }\r\n                }\r\n                .chatbot-name {\r\n                    position: relative;\r\n                    top: -13px;\r\n                    font-size: 16px;\r\n                    font-weight: 400;\r\n                    color: $frogue-color-sub;\r\n                    display: inline-block;\r\n                    white-space: nowrap;\r\n                    width: 10%;\r\n                }\r\n            }\r\n            button {\r\n                float: right;\r\n                width: 40px;\r\n                height: 40px;\r\n                margin-top: 10px;\r\n                background: transparent;\r\n                border: none;\r\n                font-size: 18px;\r\n                color: #bbb;\r\n                text-align: center;\r\n            }\r\n            &:after {\r\n                content: \"\";\r\n                display: block;\r\n                clear: both;\r\n            }\r\n        }\r\n\r\n        /* 토스트 메시지 */\r\n        .toast-message{\r\n            background-color:$frogue-color-main;\r\n            color:$frogue-color-sub;\r\n            opacity:0;\r\n            position:absolute;\r\n            border-radius:30px;\r\n            height:30px;\r\n            vertical-align:middle;\r\n            text-align:center;\r\n            line-height:24px;\r\n            font-size:24px;\r\n            width:82%;\r\n            left:9%;\r\n            z-index:1;\r\n            top:-30px;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n            visibility: hidden;\r\n            -webkit-transition: opacity 0.2s;\r\n            transition: opacity 0.2s;\r\n            span{\r\n                font-size:16px;\r\n                font-weight:400;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n                width:95%;\r\n                height:20px;\r\n                display:inline-block;\r\n            }\r\n            &.toasting{\r\n                top:-30px;\r\n                opacity:0.95;\r\n                visibility: visible;\r\n                -webkit-transition:opacity 0.2s, visibility 0s;\r\n                transition:opacity 0.2s, visibility 0s;\r\n            }\r\n        }\r\n        .chat-discussion {\r\n            /*대화 내용 표시*/\r\n            background-color: $frogue-color-sub;\r\n            background-size: contain;\r\n            padding: 64px 10px 20px 10px;\r\n            overflow-x: hidden;\r\n            height: calc(100% - 64px);\r\n            min-height: calc(100% - 64px);\r\n            /* 아이폰 사파리에서 스크롤 부드럽게 바꾸는 코드 has to be scroll, not auto */\r\n            overflow-y: scroll;\r\n            -webkit-overflow-scrolling: touch;\r\n            &::-webkit-scrollbar {\r\n                /*스크롤바 사이즈*/\r\n                width: 8px;\r\n                height: 5px;\r\n            }\r\n            &::-webkit-scrollbar-track {\r\n                /*스크롤바 배경색*/\r\n                background-color: #ddd;\r\n            }\r\n            &::-webkit-scrollbar-thumb {\r\n                /*스크롤바 잡는 부분 색*/\r\n                background-color: #aaa;\r\n                &:hover {\r\n                    background-color: #888; /*스크롤바 잡는 부분 마우스 오버시 색*/\r\n                }\r\n            }\r\n            .chat-message {\r\n                /*메시지 공통영역*/\r\n                margin-top: 4px;\r\n                &:after {\r\n                    /*float현상 캔슬링*/\r\n                    content: \"\";\r\n                    display: block;\r\n                    clear: both;\r\n                }\r\n                .message {\r\n                    position: relative;\r\n                    max-width: 64.5%;\r\n                    padding: 8px 10px 8px 10px;\r\n                    .message-content {\r\n                        word-break: keep-all;\r\n                        white-space: pre-line;\r\n                    }\r\n                    .message-date {\r\n                        position: absolute;\r\n                        bottom: 0;\r\n                        font-size: 10px;\r\n                        color: $frogue-color-date-text;\r\n                        letter-spacing: 0;\r\n                    }\r\n                    .img-container {\r\n                        position:relative;\r\n                        .img-overlay{\r\n                            width: 100%;\r\n                            height: 100%;\r\n                            background: rgba(0,0,0,0.5);\r\n                            position: absolute;\r\n                            left: 0;\r\n                            right: 0;\r\n                            top: 0;\r\n                            bottom: 0;\r\n                            color:#fff;\r\n                            text-align:center;\r\n                            display:none;\r\n                            border-radius:4px;\r\n                            span{\r\n                                font-size: 48px;\r\n                                position: absolute;\r\n                                top: 50%;\r\n                                left: 50%;\r\n                                display: inline-block;\r\n                                margin-top: -24px;\r\n                                margin-left: -24px;\r\n                                background: rgba(0,0,0,0.5);\r\n                                width: 48px;\r\n                                height: 48px;\r\n                                padding: 0;\r\n                                padding-bottom: 2px;\r\n                                line-height: 48px;\r\n                                text-align: center;\r\n                                border: 3px solid #fff;\r\n                                border-radius: 50%;\r\n                            }\r\n                        }\r\n                        &:hover{\r\n                            .img-overlay{\r\n                                display:block;\r\n                                cursor:pointer;\r\n                            }\r\n                        }\r\n                        .img-square {\r\n                            width: 100%;\r\n                            height:auto;\r\n                            border-radius:4px;\r\n                        }\r\n                    }\r\n                    .file-download-btn{\r\n                        position:relative;\r\n                        display:inline-block;\r\n                        padding:4px 8px 4px 36px;\r\n                        border-radius:4px;\r\n                        background: $frogue-color-button-bg;\r\n                        color: $frogue-color-button-text;\r\n                        text-decoration:none;\r\n                        .file-icon-container{\r\n                            width:36px;\r\n                            position: absolute;\r\n                            left:0px;\r\n                            top:50%;\r\n                            margin-top:-18px;\r\n                        }\r\n                        &:hover{\r\n                            background: $frogue-color-highlight;\r\n                            cursor: pointer;\r\n                        }\r\n                    }\r\n                }\r\n                &.left {\r\n                    /*챗봇 말풍선 모양 */\r\n\r\n                    .chatbot-profile-wrapper {\r\n                        display: none;\r\n                    }\r\n                    .message {\r\n                        float: left;\r\n                        border-radius: 0 8px 8px 8px;\r\n                        background-color: $frogue-color-balloon-chatbot-bg;\r\n                        color: $frogue-color-balloon-chatbot-text;\r\n                        .message-author {\r\n                            display: none;\r\n                        }\r\n                        .message-date {\r\n                            right: -44px;\r\n                        }\r\n                        .message-content {\r\n                            // margin-bottom:5px;\r\n                        }\r\n                    }\r\n                }\r\n                &.right {\r\n                    /*사용자 말풍선 모양 */\r\n                    margin: 14px 0;\r\n                    .message {\r\n                        float: right;\r\n                        background: $frogue-color-balloon-user-bg;\r\n                        color: $frogue-color-balloon-user-text;\r\n                        border: none;\r\n                        border-radius: 8px 0 8px 8px;\r\n                        max-width: 75%;\r\n                        .message-date {\r\n                            left: -44px;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .one-carousel{\r\n                    .img-container {\r\n                        width:260px;\r\n                        height:260px;\r\n                        overflow:hidden;\r\n                        vertical-align:middle;\r\n                        border-radius:4px;\r\n                        .img-overlay{\r\n                            span{\r\n                            }\r\n                        }\r\n                        .img-square-bg {\r\n                            width:260px;\r\n                            height:260px;\r\n                            background-size: cover;\r\n                            background-repeat: no-repeat;\r\n                            background-position: center;\r\n                        }\r\n                    }\r\n                }\r\n                .message.message-carousel-container {\r\n                    /*캐로셀 메시지 박스 스타일*/\r\n                    display: block;\r\n                    clear: both;\r\n                    margin-top: 3px;\r\n                    float: left;\r\n                    width: 100%;\r\n                    max-width: 260px;\r\n                    padding: 8px 8px;\r\n                    background-color: $frogue-color-sub;\r\n                    color: $frogue-color-balloon-chatbot-text;\r\n                    border: 1px solid $frogue-color-button-border;\r\n\r\n                    .img-container {\r\n                        width:260px;\r\n                        height:260px;\r\n                        overflow:hidden;\r\n                        vertical-align:middle;\r\n                        border-radius:4px;\r\n                        .img-overlay{\r\n                            span{\r\n                            }\r\n                        }\r\n                        .img-square-bg {\r\n                            width:260px;\r\n                            height:260px;\r\n                            background-size: cover;\r\n                            background-repeat: no-repeat;\r\n                            background-position: center;\r\n                        }\r\n                    }\r\n\r\n                    .disabled {\r\n                        border: 1px solid #999999;\r\n                        background-color: #cccccc;\r\n                        color: #666666;\r\n                        display:none;\r\n                    }\r\n                    .selected {\r\n                        border: 2px solid #333;\r\n                        background-color: #2fcc71;\r\n                        color: #ffffff;\r\n                        display:none;\r\n                        &:after{\r\n                            content: \"\\2713\";\r\n                            color:white;\r\n                            text-align: center;\r\n                            font-size:25px;\r\n                            line-height: 13px;\r\n                            z-index: 999;\r\n                            position: absolute;\r\n                            top: 5px;\r\n                            right: 5px;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            /*챗봇이 던지는 버튼 스타일*/\r\n            .button-container {\r\n                padding-top: 1px;\r\n                width: 70%;\r\n                max-width: 260px;\r\n                margin-bottom: 6px;\r\n                display: block;\r\n                clear: both;\r\n                .quick-btn {\r\n                    float: right;\r\n                    width: auto;\r\n                    display: inline-block;\r\n                    position: absolute;\r\n                    bottom: 0;\r\n                }\r\n                .maintain{\r\n                    display:block !important;\r\n                    &.disabled{\r\n                        border: 1px solid $frogue-color-button-border;\r\n                        background-color: $frogue-color-button-bg;\r\n                        color: $frogue-color-button-text;\r\n                        cursor:pointer;\r\n                        &:hover{\r\n                            background: $frogue-color-highlight;\r\n                        }\r\n                    }\r\n                }\r\n                .disabled {\r\n                    border: 1px solid #999999;\r\n                    background-color: #cccccc;\r\n                    color: #666666;\r\n                    display:none;\r\n                }\r\n                .selected {\r\n                    border: 2px solid #333;\r\n                    background-color: #2fcc71;\r\n                    color: #ffffff;\r\n                    display:none;\r\n\r\n                    &:after{\r\n                        content: \"\\2713\";\r\n                        color:white;\r\n                        text-align: center;\r\n                        font-size:25px;\r\n                        line-height: 13px;\r\n                        z-index: 999;\r\n                        position: absolute;\r\n                        top: 5px;\r\n                        right: 5px;\r\n                    }\r\n                }\r\n            }\r\n            .btn-option-list {\r\n                position: relative;\r\n                display: block;\r\n                width: 100%;\r\n                margin-top: 3px;\r\n                padding: 6px 10px;\r\n                background: $frogue-color-button-bg;\r\n                color: $frogue-color-button-text;\r\n                border: 1px solid $frogue-color-button-border;\r\n                border-radius: 4px;\r\n                font-size: 14px;\r\n                font-weight:500;\r\n                cursor: not-allowed;\r\n                i {\r\n                    font-size: 12px;\r\n                    color: $frogue-color-button-text;\r\n                }\r\n                .btn-icon-type {\r\n                    /* 버튼타엡에 따라 표시하는 아이콘 위치 잡는 코드임*/\r\n                    position: absolute;\r\n                    right: 8px;\r\n                    display: inline-block;\r\n                    top: 50%;\r\n                    margin-top: -8px;\r\n                    opacity: 0.8;\r\n                }\r\n                &:hover:not(.disabled):not(.selected) {\r\n                    cursor: pointer;\r\n                    background: $frogue-color-highlight;\r\n                    .btn-icon-type {\r\n                        opacity: 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* 챗봇이 던지는 캐로셀 버튼 스타일 */\r\n            .agile .btn-option-list {\r\n                .btn-option-list {\r\n                    text-align: center;\r\n\r\n                }\r\n            }\r\n        }\r\n        /* 입력중 표시, Typing indicator */\r\n        .chatbot-typing-indicator {\r\n            background-color: $frogue-color-balloon-chatbot-bg;\r\n            will-change: transform;\r\n            width: auto;\r\n            border-radius: 0 8px 8px 8px;\r\n            padding: 10px;\r\n            display: table;\r\n            position: relative;\r\n            margin-top: 4px;\r\n            span {\r\n                height: 8px;\r\n                width: 8px;\r\n                float: left;\r\n                margin: 0 2px;\r\n                background-color: $frogue-color-balloon-chatbot-text;\r\n                display: block;\r\n                border-radius: 50%;\r\n                opacity: 0.2;\r\n                @for $i from 1 through 3 {\r\n                    &:nth-of-type(#{$i}) {\r\n                        animation: 1s blink infinite ($i * 0.3333s);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .user-typing-indicator {\r\n            background-color: $frogue-color-balloon-user-bg;\r\n            will-change: transform;\r\n            width: auto;\r\n            border-radius: 8px 0 8px 8px;\r\n            float: right;\r\n            padding: 10px;\r\n            display: table;\r\n            position: relative;\r\n            margin-top: 4px;\r\n            span {\r\n                height: 8px;\r\n                width: 8px;\r\n                float: left;\r\n                margin: 0 2px;\r\n                background-color: $frogue-color-balloon-user-text;\r\n                display: block;\r\n                border-radius: 50%;\r\n                opacity: 0.2;\r\n                @for $i from 1 through 3 {\r\n                    &:nth-of-type(#{$i}) {\r\n                        animation: 1s blink infinite ($i * 0.3333s);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        @keyframes blink {\r\n            50% {\r\n                opacity: 0.6;\r\n                transform: scale(1.05);\r\n            }\r\n        }\r\n\r\n\r\n        /* 퀵버튼 스타일 */\r\n        .quick-button-space {\r\n            height: 12px;\r\n            &.opened {\r\n                height: 0;\r\n            }\r\n        }\r\n\r\n        .quick-button-container {\r\n            background: $frogue-color-sub;\r\n            position: absolute;\r\n            bottom: 84px;\r\n            left: 5px;\r\n            right: 0px;\r\n            padding: 2px 10px 2px 10px;\r\n            height: 28px;\r\n            white-space: nowrap;\r\n            word-break: keep-all;\r\n            overflow:hidden;\r\n            z-index: 100;\r\n            -webkit-transition: opacity 0.6s ease-in;\r\n            -moz-transition: opacity 0.6s ease-in;\r\n            -ms-transition: opacity 0.6s ease-in;\r\n            -o-transition: opacity 0.6s ease-in;\r\n            transition: opacity 0.6s ease-in;\r\n            .scrollable{\r\n                width:100%;\r\n                height: 100%;\r\n                position:absolute;\r\n                left:0;\r\n                text-align:center;\r\n                white-space: nowrap;\r\n                word-break: keep-all;\r\n                overflow-x: auto;\r\n                overflow-y: hidden;\r\n                -webkit-box-sizing: content-box;\r\n                -ms-overflow-style: none;\r\n                box-sizing: content-box;\r\n\r\n                &::-webkit-scrollbar {\r\n                    background: transparent;\r\n                    width: 1px !important;\r\n                    height: 0px !important;\r\n                }\r\n\r\n                >span{\r\n                    white-space: nowrap;\r\n                }\r\n            }\r\n            .btn-quick-list {\r\n                display: inline-block;\r\n                padding: 4px 10px;\r\n                margin-right: 4px;\r\n                margin-bottom:6px;\r\n                background: $frogue-color-button-bg;\r\n                color: $frogue-color-button-text;\r\n                border: 1px solid $frogue-color-button-border;\r\n                border-radius: 4px;\r\n                font-size: 14px;\r\n                height: 30px;\r\n                vertical-align: top;\r\n                cursor: pointer;\r\n                &:hover {\r\n                    background: $frogue-color-highlight;\r\n                }\r\n            }\r\n            &.opened,\r\n            &.no-quick-btns {\r\n                bottom: 200px;\r\n                height: 0;\r\n                opacity: 0;\r\n                overflow: hidden;\r\n                -webkit-transition: all 0.2s ease-out;\r\n                -moz-transition: all 0.2s ease-out;\r\n                -ms-transition: all 0.2s ease-out;\r\n                -o-transition: all 0.2s ease-out;\r\n                transition: all 0.2s ease-out;\r\n            }\r\n        }\r\n\r\n        .frogue-input-wrapper {\r\n            // position: relative;\r\n            padding: 0 16px 10px 48px;\r\n            font-size: 14px;\r\n            position: absolute;\r\n            bottom: 0;\r\n            right: 0;\r\n            left: 0;\r\n            height: 78px;\r\n            background:$frogue-color-sub;\r\n\r\n            /*패널 닫히는 애니메이션 : Input box*/\r\n            -webkit-transition: all 0.4s ease-out;\r\n            -moz-transition: all 0.4s ease-out;\r\n            -ms-transition: all 0.4s ease-out;\r\n            -o-transition: all 0.4s ease-out;\r\n            transition: all 0.4s ease-out;\r\n            &.none-btn-extension {\r\n                padding: 0 16px 10px 16px;\r\n            }\r\n            .input-text-border {\r\n                background: $frogue-color-sub;\r\n                border-bottom: 1.2px solid $frogue-color-main;\r\n                //border-radius: 10px 0 10px 10px;\r\n                padding-left: 4px;\r\n                display: block;\r\n                margin: 0 auto;\r\n                width: 100%;\r\n                height: 44px;\r\n            }\r\n            input.input-text {\r\n                font-size: 16px;\r\n                color: $frogue-color-main;\r\n                border: none;\r\n                background:none;\r\n                height: 40px;\r\n                position: relative;\r\n                top: 10px;\r\n                width: unquote(\"-webkit-calc(100% - 40px)\");\r\n                width: unquote(\"-moz-calc(100% - 40px)\");\r\n                width: unquote(\"calc(100% - 40px)\");\r\n                &::-ms-clear {\r\n                    display: none;\r\n                }\r\n            }\r\n            .btn-extension {\r\n                position: absolute;\r\n                top: 8px;\r\n                left: 8px;\r\n                width: 36px;\r\n                height: 36px;\r\n                border: none;\r\n                box-sizing: border-box;\r\n                -moz-box-sizing: border-box;\r\n                -webkit-box-sizing: border-box;\r\n                border-radius: 50%;\r\n                background: $frogue-color-button-bg;\r\n                transition: all 0.4s ease-out;\r\n                transform: rotate(0deg);\r\n                .btn-img {\r\n                    width: 36px;\r\n                    height: 36px;\r\n                }\r\n                &:hover {\r\n                    background: $frogue-color-highlight;\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n            .btn-send {\r\n                position: absolute;\r\n                bottom: 46px;\r\n                right: 8px;\r\n                width: 32px;\r\n                height: 32px;\r\n                cursor: pointer;\r\n                border: none;\r\n                background: none;\r\n                -webkit-transition: all 0.4s ease-out;\r\n                -moz-transition: all 0.4s ease-out;\r\n                -ms-transition: all 0.4s ease-out;\r\n                -o-transition: all 0.4s ease-out;\r\n                transition: all 0.4s ease-out;\r\n                > .btn-img {\r\n                    width: 24px;\r\n                    height: 24px;\r\n                    opacity: 0.8;\r\n                }\r\n                &:hover {\r\n                    > .btn-img {\r\n                        opacity: 1;\r\n                    }\r\n                }\r\n                &:active,\r\n                &:focus {\r\n                    > .btn-img {\r\n                        opacity: 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .frogue-panel-extention {\r\n            display: block;\r\n            text-align: center;\r\n            background: $frogue-color-sub;\r\n            color: $frogue-color-main;\r\n            border-bottom:1px solid $frogue-color-main;\r\n            position: absolute;\r\n            bottom: 40px;\r\n            left: 0px;\r\n            width: 100%;\r\n            margin: 0 auto 0 auto;\r\n            padding-top: 8px;\r\n\r\n            /*패널 닫히는 애니메이션*/\r\n            -webkit-transition: all 0.2s ease-out;\r\n            -moz-transition: all 0.2s ease-out;\r\n            -ms-transition: all 0.2s ease-out;\r\n            -o-transition: all 0.2s ease-out;\r\n            transition: all 0.2s ease-out;\r\n            max-height: 0;\r\n            opacity: 0;\r\n            overflow: hidden;\r\n\r\n            div {\r\n                display:inline-block;\r\n                text-align:center;\r\n                .btn-img {\r\n                    box-sizing: border-box;\r\n                    -moz-box-sizing: border-box;\r\n                    -webkit-box-sizing: border-box;\r\n                    border-radius: 50%;\r\n                    width: 48px;\r\n                    height: 48px;\r\n                    background: $frogue-color-button-bg;\r\n                    display:block;\r\n                    margin:0 5px;\r\n                    &:hover {\r\n                        cursor: pointer;\r\n                        background: $frogue-color-highlight;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .frogue-footer {\r\n            bottom: 0px;\r\n            left: 0;\r\n            width: 100%;\r\n            position: absolute;\r\n            .btn-banner {\r\n                color: $frogue-color-main;\r\n                background: $frogue-color-sub;\r\n                width: 100%;\r\n                border: none;\r\n                padding: 7px 0 12px;\r\n                margin: 0 auto 0 auto;\r\n                display: block;\r\n                text-align: center;\r\n                text-decoration: none;\r\n                cursor: pointer;\r\n                &:hover {\r\n                    text-decoration: underline;\r\n                    opacity: 0.9;\r\n                }\r\n            }\r\n        }\r\n        .frogue-bottom-container.opened {\r\n            /* Extention 열렸을때 디자인 적용 */\r\n            .frogue-input-wrapper {\r\n                /*패널 열리는 애니메이션 : Input Box 이동*/\r\n                -webkit-transition: all 0.2s ease-out;\r\n                -moz-transition: all 0.2s ease-out;\r\n                -ms-transition: all 0.2s ease-out;\r\n                -o-transition: all 0.2s ease-out;\r\n                transition: all 0.2s ease-out;\r\n                bottom: 80px;\r\n                .btn-extension {\r\n                    -webkit-transition: all 0.2s ease-out;\r\n                    -moz-transition: all 0.2s ease-out;\r\n                    -ms-transition: all 0.2s ease-out;\r\n                    -o-transition: all 0.2s ease-out;\r\n                    transition: all 0.2s ease-out;\r\n                    transform: rotate(45deg);\r\n                }\r\n                .btn-send {\r\n                }\r\n            }\r\n            .frogue-panel-extention {\r\n                /*패널 열리는 애니메이션*/\r\n                -webkit-transition: max-height 0.4s, opacity 0.4s ease-out;\r\n                -moz-transition: max-height 0.4s, opacity 0.4s ease-out;\r\n                -ms-transition: max-height 0.4s, opacity 0.4s ease-out;\r\n                -o-transition: max-height 0.4s, opacity 0.4s ease-out;\r\n                transition: max-height 0.4s, opacity 0.4s ease-out;\r\n                max-height: 84px;\r\n                opacity: 1;\r\n                button {\r\n                    background: none;\r\n                    border: none;\r\n                    text-align: center;\r\n                    label {\r\n                        text-align: center;\r\n                        color: $frogue-color-main;\r\n                        position: relative;\r\n                        bottom: 2px;\r\n                        display:block;\r\n                    }\r\n                    .img-box {\r\n                        background: $frogue-color-sub;\r\n                        position: relative;\r\n                        top: 4px;\r\n                        cursor: pointer;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*아이폰 브라우저 툴바 사이즈 변동성 생기는 부분 해결*/\r\n    @media only screen and (max-device-width: 667px), screen and (max-width: 450px){\r\n        body{\r\n            overflow:hidden;\r\n            position: fixed;\r\n        }\r\n        .frogue-screen{\r\n            display: -webkit-box;\r\n            display: -ms-flexbox;\r\n            display: flex;\r\n            -webkit-box-orient: vertical;\r\n            -webkit-box-direction: normal;\r\n            -ms-flex-direction: column;\r\n            flex-direction: column;\r\n            -webkit-box-pack: start;\r\n            -ms-flex-pack: start;\r\n            justify-content: flex-start;\r\n            position: absolute;\r\n            top: 0 !important;\r\n            bottom: 0 !important;\r\n            left: 0 !important;\r\n            right: 0 !important;\r\n            width: 100% !important;\r\n            height: 100% !important;\r\n            border-radius: 0 !important;\r\n            max-height:100% !important;\r\n        }\r\n    }\r\n    /* 가랑비 이상에 banner제거 하는 사용자를 위한 스타일 */\r\n    .frogue-pond.removeBanner {\r\n        .frogue-container {\r\n            .frogue-content-wrapper {\r\n                height: calc(100% - 80px);\r\n            }\r\n            .quick-button-container {\r\n                bottom: 54px;\r\n            }\r\n            .frogue-bottom-container {\r\n                &.opened {\r\n                    .frogue-panel-extention {\r\n                        bottom: -1px;\r\n                    }\r\n                }\r\n            }\r\n            .frogue-input-wrapper {\r\n                height: 44px;\r\n                .btn-send {\r\n                    bottom: 12px;\r\n                }\r\n            }\r\n        }\r\n        .frogue-footer {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .frogue-pond.removeBanner.opened {\r\n        .frogue-container {\r\n            .frogue-content-wrapper {\r\n                height: calc(100% - 174px);\r\n            }\r\n        }\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./chatBody.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./chatBody.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./chatBody.vue?vue&type=template&id=0a78e7ce&scoped=true&\"\nimport script from \"./chatBody.vue?vue&type=script&lang=js&\"\nexport * from \"./chatBody.vue?vue&type=script&lang=js&\"\nimport style0 from \"./chatBody.vue?vue&type=style&index=0&lang=scss&\"\nimport style1 from \"./chatBody.vue?vue&type=style&index=1&id=0a78e7ce&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a78e7ce\",\n  null\n  \n)\n\nexport default component.exports","import 'babel-polyfill'\nimport Vue from 'vue'\n//import chatBtn from './chatBtn.vue'\nimport chatBody from './chatBody.vue'\nimport VueAgile from 'vue-agile'\n\nVue.use(VueAgile);\n\nVue.config.productionTip = false\n\nconsole.log(\"%cdanbee.Ai\", \"color: #ffc629; font-family: sans-serif; font-size: 4.5em; font-weight: bolder; text-shadow: #000 1px 1px;\");\n\nnew Vue({\n  el: '#container',\n  render(h) {\n    //return h(chatBtn, {props: this.nodeProperties()});\n    return h(chatBody, {props: this.nodeProperties()});\n  },\n  methods: {\n    nodeProperties() {\n      let props = {};\n      Array.prototype.forEach.call(this.$el.attributes, (node) => {\n        //console.log('node.name : ' + node.name + ', node.value : ' + node.value);\n        props[node.name] = node.value;\n      });\n      return props;\n    },\n  }\n});\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./chatBody.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}